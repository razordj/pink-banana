{
  "contractName": "PhotoNFTTradable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFTData",
          "name": "_photoNFTData",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "OpenTradeInfo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ad",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "TradePremiumStatusChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "ad",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "status",
          "type": "bytes32"
        }
      ],
      "name": "TradeStatusChange",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "photoNFTData",
      "outputs": [
        {
          "internalType": "contract PhotoNFTData",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "trades",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "photoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "photoPrice",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "status",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "premiumStatus",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "photoNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_photoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_photoPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "registerTradeWhenCreateNewPhotoNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "photoNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_photoId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "openTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "photoNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_photoId",
          "type": "uint256"
        }
      ],
      "name": "cancelTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "photoNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_photoId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_newState",
          "type": "bool"
        }
      ],
      "name": "updatePremiumStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "_photoNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_photoId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "transferOwnershipOfPhotoNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract PhotoNFT",
          "name": "photoNFT",
          "type": "address"
        }
      ],
      "name": "getTrade",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "photoId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "photoPrice",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "status",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "premiumStatus",
              "type": "bool"
            }
          ],
          "internalType": "struct PhotoNFTTradable.Trade",
          "name": "trade_",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract PhotoNFTData\",\"name\":\"_photoNFTData\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"OpenTradeInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ad\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"TradePremiumStatusChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ad\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"}],\"name\":\"TradeStatusChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"photoNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_photoId\",\"type\":\"uint256\"}],\"name\":\"cancelTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"photoNFT\",\"type\":\"address\"}],\"name\":\"getTrade\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"photoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"photoPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"premiumStatus\",\"type\":\"bool\"}],\"internalType\":\"struct PhotoNFTTradable.Trade\",\"name\":\"trade_\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"photoNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_photoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"openTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"photoNFTData\",\"outputs\":[{\"internalType\":\"contract PhotoNFTData\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"photoNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_photoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_photoPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"registerTradeWhenCreateNewPhotoNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"trades\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"photoId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"photoPrice\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"premiumStatus\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"_photoNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_photoId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"transferOwnershipOfPhotoNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract PhotoNFT\",\"name\":\"photoNFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_photoId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_newState\",\"type\":\"bool\"}],\"name\":\"updatePremiumStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancelTrade(address,uint256)\":{\"details\":\"Cancels a trade by the seller.\"},\"getTrade(address)\":{\"details\":\"- Returns the details for a trade.\"},\"openTrade(address,uint256,uint256)\":{\"details\":\"Opens a trade by the seller.\"},\"registerTradeWhenCreateNewPhotoNFT(address,uint256,uint256,address)\":{\"details\":\"Opens a new trade. Puts _photoId in escrow.\",\"params\":{\"_photoId\":\"The id for the photoId to trade.\",\"_photoPrice\":\"The amount of currency for which to trade the photoId.\"}},\"transferOwnershipOfPhotoNFT(address,uint256,address)\":{\"details\":\"Executes a trade. Must have approved this contract to transfer the amount of currency specified to the seller. Transfers ownership of the photoId to the filler.\"},\"updatePremiumStatus(address,uint256,bool)\":{\"details\":\"Opens a trade by the seller.\"}},\"title\":\"- PhotoNFTTradable contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"registerTradeWhenCreateNewPhotoNFT(address,uint256,uint256,address)\":{\"notice\":\"- This method is only executed when a seller create a new PhotoNFT\"}},\"notice\":\"- This contract has role that put on sale of photoNFTs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PhotoNFTTradable.sol\":\"PhotoNFTTradable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PhotoNFT.sol\":{\"keccak256\":\"0x38e310d09ab3ae099d277cbf56af9f610b7cf1907782ddf2877071dc59b356cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49b951190c8fd56eb2376c146e3a7682df0250334da1ed96d8b0d1e4ef9ee8fa\",\"dweb:/ipfs/QmNgW6Ygj9cg7R3JNzf3pPMVsDU1TFbhifeVidyNLQsYnY\"]},\"project:/contracts/PhotoNFTData.sol\":{\"keccak256\":\"0x54c0d4f4436d77f9af440622e0145f9a99449cac0219ffc7b915fbd64439a4f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e25ae7a2ecb9dd653cdd7d8890c3b4dd346a70f7a45116bf15da82f8834251bb\",\"dweb:/ipfs/QmRUnnh8fj1RsqzQNHj9grrBvKW3SztA1tdxeG834TM4GU\"]},\"project:/contracts/PhotoNFTTradable.sol\":{\"keccak256\":\"0xffa6703686e18ded49596f5171315e87c39e04464f1a9c73a80aad1812da6e45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79d96f611036f4558b4a6e16fb47598e7d58dd14e5e60e60cc16f675fd770256\",\"dweb:/ipfs/QmfAZ9VHBQ3mBMh49ri9M4EGdJA5jM1GnKSzkHyufSHft6\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8eeaf6afe00229af4c232ca058bb08b7a24cc3886f0b387159ac49ffd8b5312\",\"dweb:/ipfs/QmdnVKmDDWDvdRr6vtrxy3G6WafqA2TAhUZv1UFMsm4B4r\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x188d038a65a945481cc13fe30db334472dfbed61f7959d4478d05feb6303b1ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7aec4efa22389811ffa393463569410bbca1ecaa551bc94d69020bc9567e9277\",\"dweb:/ipfs/QmPwk5uVSHPQkepebrZSQ9xqgXdPABKqHwJZ2HkzNByLRE\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9\",\"dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"project:/contracts/photo-nft-data/commons/PhotoNFTDataObjects.sol\":{\"keccak256\":\"0xa3607779cad2c82606c0b59e7fbcaefbac2c25d6f2730dcdb46499d2e28a369e\",\"urls\":[\"bzz-raw://18453ecf3b87dc01c75e04751fda08f36c09d5ea244f7a40866f41cb5f8751c6\",\"dweb:/ipfs/QmSqNbPJi7NsTVf4vasksr6TXoQZNqrT3HFAWNx6qRMatQ\"]},\"project:/contracts/photo-nft-data/commons/PhotoNFTDataStorages.sol\":{\"keccak256\":\"0xb11d641518fff8fb4d726fa669a159281f23e1698ed0e74eee2461f6bf0ab435\",\"urls\":[\"bzz-raw://27d3236d71fee01861fef56b3ac680fb177af97f51f507e7b7d5c45385d3de96\",\"dweb:/ipfs/QmdujumazHAMjdmazWwzoMEwGV1jfNwcjQCUQFh5NMKppd\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200182f3803806200182f83398181016040528101906200003791906200009d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600281905550506200012b565b600081519050620000978162000111565b92915050565b600060208284031215620000b057600080fd5b6000620000c08482850162000086565b91505092915050565b6000620000d682620000f1565b9050919050565b6000620000ea82620000c9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200011c81620000dd565b81146200012857600080fd5b50565b6116f4806200013b6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063ab7a6c3e1161005b578063ab7a6c3e14610115578063baea40e214610145578063dee98aad14610161578063ec0395141461017d57610088565b8063493c21761461008d578063759c4bf3146100a95780638d6b52f3146100c5578063a9f752e5146100e1575b600080fd5b6100a760048036038101906100a29190610e65565b61019b565b005b6100c360048036038101906100be9190610e29565b6102f9565b005b6100df60048036038101906100da9190610eb4565b610579565b005b6100fb60048036038101906100f69190610dae565b610757565b60405161010c95949392919061126b565b60405180910390f35b61012f600480360381019061012a9190610e00565b6107ba565b60405161013c91906113da565b60405180910390f35b61015f600480360381019061015a9190610f03565b6108a8565b005b61017b60048036038101906101769190610f52565b610b04565b005b610185610c4b565b60405161019291906112be565b60405180910390f35b600083905060006101ab856107ba565b90507f4f70656e00000000000000000000000000000000000000000000000000000000816060015114610213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020a906113ba565b60405180910390fd5b61021e858585610c6f565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd308584602001516040518463ffffffff1660e01b815260040161025f939291906111bd565b600060405180830381600087803b15801561027957600080fd5b505af115801561028d573d6000803e3d6000fd5b505050507f43616e63656c6c656400000000000000000000000000000000000000000000008160600181815250507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae70856040516102ea919061121d565b60405180910390a15050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c59061137a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd8afa9f8460006040518363ffffffff1660e01b815260040161042a929190611302565b602060405180830381600087803b15801561044457600080fd5b505af1158015610458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047c9190610dd7565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd308360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546040518463ffffffff1660e01b81526004016104e2939291906111bd565b600060405180830381600087803b1580156104fc57600080fd5b505af1158015610510573d6000803e3d6000fd5b505050507f43616e63656c6c6564000000000000000000000000000000000000000000000081600301819055507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae708360405161056c919061121d565b60405180910390a1505050565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106459061139a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4d55c6885846040518363ffffffff1660e01b81526004016106a99291906112d9565b602060405180830381600087803b1580156106c357600080fd5b505af11580156106d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fb9190610dd7565b50818160040160006101000a81548160ff0219169083151502179055507ff914bff822f938e06c0aaceb42bb4ca99085426a1e493b755e716662d12163ee84836040516107499291906111f4565b60405180910390a150505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6107c2610cfb565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581525050905080915050919050565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109749061139a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd8afa9f85846040518363ffffffff1660e01b81526004016109d892919061133e565b602060405180830381600087803b1580156109f257600080fd5b505af1158015610a06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2a9190610dd7565b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd333084600101546040518463ffffffff1660e01b8152600401610a6c939291906111bd565b600060405180830381600087803b158015610a8657600080fd5b505af1158015610a9a573d6000803e3d6000fd5b505050507f4f70656e0000000000000000000000000000000000000000000000000000000081600301819055507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae7084604051610af69190611244565b60405180910390a150505050565b600160026000828254610b179190611406565b925050819055506040518060a001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020017f43616e63656c6c65640000000000000000000000000000000000000000000000815260200160001515815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555090505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681526020016000151581525090565b600081359050610d5481611662565b92915050565b600081359050610d6981611679565b92915050565b600081519050610d7e81611679565b92915050565b600081359050610d9381611690565b92915050565b600081359050610da8816116a7565b92915050565b600060208284031215610dc057600080fd5b6000610dce84828501610d45565b91505092915050565b600060208284031215610de957600080fd5b6000610df784828501610d6f565b91505092915050565b600060208284031215610e1257600080fd5b6000610e2084828501610d84565b91505092915050565b60008060408385031215610e3c57600080fd5b6000610e4a85828601610d84565b9250506020610e5b85828601610d99565b9150509250929050565b600080600060608486031215610e7a57600080fd5b6000610e8886828701610d84565b9350506020610e9986828701610d99565b9250506040610eaa86828701610d45565b9150509250925092565b600080600060608486031215610ec957600080fd5b6000610ed786828701610d84565b9350506020610ee886828701610d99565b9250506040610ef986828701610d5a565b9150509250925092565b600080600060608486031215610f1857600080fd5b6000610f2686828701610d84565b9350506020610f3786828701610d99565b9250506040610f4886828701610d99565b9150509250925092565b60008060008060808587031215610f6857600080fd5b6000610f7687828801610d84565b9450506020610f8787828801610d99565b9350506040610f9887828801610d99565b9250506060610fa987828801610d45565b91505092959194509250565b610fbe8161145c565b82525050565b610fcd8161145c565b82525050565b610fdc8161146e565b82525050565b610feb8161146e565b82525050565b610ffa8161147a565b82525050565b6110098161147a565b82525050565b611018816114c0565b82525050565b611027816114e4565b82525050565b61103681611508565b82525050565b60006110496026836113f5565b915061105482611549565b604082019050919050565b600061106c6021836113f5565b915061107782611598565b604082019050919050565b600061108f6012836113f5565b915061109a826115e7565b602082019050919050565b7f43616e63656c6c65640000000000000000000000000000000000000000000000815250565b60006110d86009836113f5565b91506110e382611610565b602082019050919050565b7f4f70656e00000000000000000000000000000000000000000000000000000000815250565b60006111216004836113f5565b915061112c82611639565b602082019050919050565b60a08201600082015161114d6000850182610fb5565b506020820151611160602085018261119f565b506040820151611173604085018261119f565b5060608201516111866060850182610ff1565b5060808201516111996080850182610fd3565b50505050565b6111a8816114b6565b82525050565b6111b7816114b6565b82525050565b60006060820190506111d26000830186610fc4565b6111df6020830185610fc4565b6111ec60408301846111ae565b949350505050565b60006040820190506112096000830185610fc4565b6112166020830184610fe2565b9392505050565b60006040820190506112326000830184610fc4565b61123e602083016110a5565b92915050565b60006040820190506112596000830184610fc4565b611265602083016110ee565b92915050565b600060a0820190506112806000830188610fc4565b61128d60208301876111ae565b61129a60408301866111ae565b6112a76060830185611000565b6112b46080830184610fe2565b9695505050505050565b60006020820190506112d3600083018461100f565b92915050565b60006040820190506112ee600083018561101e565b6112fb6020830184610fe2565b9392505050565b6000606082019050611317600083018561101e565b8181036020830152611328816110cb565b9050611337604083018461102d565b9392505050565b6000606082019050611353600083018561101e565b818103602083015261136481611114565b905061137360408301846111ae565b9392505050565b600060208201905081810360008301526113938161103c565b9050919050565b600060208201905081810360008301526113b38161105f565b9050919050565b600060208201905081810360008301526113d381611082565b9050919050565b600060a0820190506113ef6000830184611137565b92915050565b600082825260208201905092915050565b6000611411826114b6565b915061141c836114b6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114515761145061151a565b5b828201905092915050565b600061146782611496565b9050919050565b60008115159050919050565b6000819050919050565b600061148f8261145c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114cb826114d2565b9050919050565b60006114dd82611496565b9050919050565b60006114ef826114f6565b9050919050565b600061150182611496565b9050919050565b6000611513826114b6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f54726164652063616e2062652063616e63656c6c6564206f6e6c79206279207360008201527f656c6c65722e0000000000000000000000000000000000000000000000000000602082015250565b7f54726164652063616e206265206f70656e206f6e6c792062792073656c6c657260008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f5472616465206973206e6f74204f70656e2e0000000000000000000000000000600082015250565b7f43616e63656c6c65640000000000000000000000000000000000000000000000600082015250565b7f4f70656e00000000000000000000000000000000000000000000000000000000600082015250565b61166b8161145c565b811461167657600080fd5b50565b6116828161146e565b811461168d57600080fd5b50565b61169981611484565b81146116a457600080fd5b50565b6116b0816114b6565b81146116bb57600080fd5b5056fea2646970667358221220258a06d6eacc94a96d64560e87e15d3cf515cfce726bc3ef282100c11852719d64736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063ab7a6c3e1161005b578063ab7a6c3e14610115578063baea40e214610145578063dee98aad14610161578063ec0395141461017d57610088565b8063493c21761461008d578063759c4bf3146100a95780638d6b52f3146100c5578063a9f752e5146100e1575b600080fd5b6100a760048036038101906100a29190610e65565b61019b565b005b6100c360048036038101906100be9190610e29565b6102f9565b005b6100df60048036038101906100da9190610eb4565b610579565b005b6100fb60048036038101906100f69190610dae565b610757565b60405161010c95949392919061126b565b60405180910390f35b61012f600480360381019061012a9190610e00565b6107ba565b60405161013c91906113da565b60405180910390f35b61015f600480360381019061015a9190610f03565b6108a8565b005b61017b60048036038101906101769190610f52565b610b04565b005b610185610c4b565b60405161019291906112be565b60405180910390f35b600083905060006101ab856107ba565b90507f4f70656e00000000000000000000000000000000000000000000000000000000816060015114610213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020a906113ba565b60405180910390fd5b61021e858585610c6f565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd308584602001516040518463ffffffff1660e01b815260040161025f939291906111bd565b600060405180830381600087803b15801561027957600080fd5b505af115801561028d573d6000803e3d6000fd5b505050507f43616e63656c6c656400000000000000000000000000000000000000000000008160600181815250507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae70856040516102ea919061121d565b60405180910390a15050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c59061137a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd8afa9f8460006040518363ffffffff1660e01b815260040161042a929190611302565b602060405180830381600087803b15801561044457600080fd5b505af1158015610458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047c9190610dd7565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd308360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546040518463ffffffff1660e01b81526004016104e2939291906111bd565b600060405180830381600087803b1580156104fc57600080fd5b505af1158015610510573d6000803e3d6000fd5b505050507f43616e63656c6c6564000000000000000000000000000000000000000000000081600301819055507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae708360405161056c919061121d565b60405180910390a1505050565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106459061139a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c4d55c6885846040518363ffffffff1660e01b81526004016106a99291906112d9565b602060405180830381600087803b1580156106c357600080fd5b505af11580156106d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fb9190610dd7565b50818160040160006101000a81548160ff0219169083151502179055507ff914bff822f938e06c0aaceb42bb4ca99085426a1e493b755e716662d12163ee84836040516107499291906111f4565b60405180910390a150505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6107c2610cfb565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581525050905080915050919050565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109749061139a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bd8afa9f85846040518363ffffffff1660e01b81526004016109d892919061133e565b602060405180830381600087803b1580156109f257600080fd5b505af1158015610a06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2a9190610dd7565b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd333084600101546040518463ffffffff1660e01b8152600401610a6c939291906111bd565b600060405180830381600087803b158015610a8657600080fd5b505af1158015610a9a573d6000803e3d6000fd5b505050507f4f70656e0000000000000000000000000000000000000000000000000000000081600301819055507fee0bd10dbd5c2151f43ed2fa6af0584fbad842aa901d657f39fffd140822ae7084604051610af69190611244565b60405180910390a150505050565b600160026000828254610b179190611406565b925050819055506040518060a001604052808273ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020017f43616e63656c6c65640000000000000000000000000000000000000000000000815260200160001515815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555090505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681526020016000151581525090565b600081359050610d5481611662565b92915050565b600081359050610d6981611679565b92915050565b600081519050610d7e81611679565b92915050565b600081359050610d9381611690565b92915050565b600081359050610da8816116a7565b92915050565b600060208284031215610dc057600080fd5b6000610dce84828501610d45565b91505092915050565b600060208284031215610de957600080fd5b6000610df784828501610d6f565b91505092915050565b600060208284031215610e1257600080fd5b6000610e2084828501610d84565b91505092915050565b60008060408385031215610e3c57600080fd5b6000610e4a85828601610d84565b9250506020610e5b85828601610d99565b9150509250929050565b600080600060608486031215610e7a57600080fd5b6000610e8886828701610d84565b9350506020610e9986828701610d99565b9250506040610eaa86828701610d45565b9150509250925092565b600080600060608486031215610ec957600080fd5b6000610ed786828701610d84565b9350506020610ee886828701610d99565b9250506040610ef986828701610d5a565b9150509250925092565b600080600060608486031215610f1857600080fd5b6000610f2686828701610d84565b9350506020610f3786828701610d99565b9250506040610f4886828701610d99565b9150509250925092565b60008060008060808587031215610f6857600080fd5b6000610f7687828801610d84565b9450506020610f8787828801610d99565b9350506040610f9887828801610d99565b9250506060610fa987828801610d45565b91505092959194509250565b610fbe8161145c565b82525050565b610fcd8161145c565b82525050565b610fdc8161146e565b82525050565b610feb8161146e565b82525050565b610ffa8161147a565b82525050565b6110098161147a565b82525050565b611018816114c0565b82525050565b611027816114e4565b82525050565b61103681611508565b82525050565b60006110496026836113f5565b915061105482611549565b604082019050919050565b600061106c6021836113f5565b915061107782611598565b604082019050919050565b600061108f6012836113f5565b915061109a826115e7565b602082019050919050565b7f43616e63656c6c65640000000000000000000000000000000000000000000000815250565b60006110d86009836113f5565b91506110e382611610565b602082019050919050565b7f4f70656e00000000000000000000000000000000000000000000000000000000815250565b60006111216004836113f5565b915061112c82611639565b602082019050919050565b60a08201600082015161114d6000850182610fb5565b506020820151611160602085018261119f565b506040820151611173604085018261119f565b5060608201516111866060850182610ff1565b5060808201516111996080850182610fd3565b50505050565b6111a8816114b6565b82525050565b6111b7816114b6565b82525050565b60006060820190506111d26000830186610fc4565b6111df6020830185610fc4565b6111ec60408301846111ae565b949350505050565b60006040820190506112096000830185610fc4565b6112166020830184610fe2565b9392505050565b60006040820190506112326000830184610fc4565b61123e602083016110a5565b92915050565b60006040820190506112596000830184610fc4565b611265602083016110ee565b92915050565b600060a0820190506112806000830188610fc4565b61128d60208301876111ae565b61129a60408301866111ae565b6112a76060830185611000565b6112b46080830184610fe2565b9695505050505050565b60006020820190506112d3600083018461100f565b92915050565b60006040820190506112ee600083018561101e565b6112fb6020830184610fe2565b9392505050565b6000606082019050611317600083018561101e565b8181036020830152611328816110cb565b9050611337604083018461102d565b9392505050565b6000606082019050611353600083018561101e565b818103602083015261136481611114565b905061137360408301846111ae565b9392505050565b600060208201905081810360008301526113938161103c565b9050919050565b600060208201905081810360008301526113b38161105f565b9050919050565b600060208201905081810360008301526113d381611082565b9050919050565b600060a0820190506113ef6000830184611137565b92915050565b600082825260208201905092915050565b6000611411826114b6565b915061141c836114b6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114515761145061151a565b5b828201905092915050565b600061146782611496565b9050919050565b60008115159050919050565b6000819050919050565b600061148f8261145c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114cb826114d2565b9050919050565b60006114dd82611496565b9050919050565b60006114ef826114f6565b9050919050565b600061150182611496565b9050919050565b6000611513826114b6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f54726164652063616e2062652063616e63656c6c6564206f6e6c79206279207360008201527f656c6c65722e0000000000000000000000000000000000000000000000000000602082015250565b7f54726164652063616e206265206f70656e206f6e6c792062792073656c6c657260008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f5472616465206973206e6f74204f70656e2e0000000000000000000000000000600082015250565b7f43616e63656c6c65640000000000000000000000000000000000000000000000600082015250565b7f4f70656e00000000000000000000000000000000000000000000000000000000600082015250565b61166b8161145c565b811461167657600080fd5b50565b6116828161146e565b811461168d57600080fd5b50565b61169981611484565b81146116a457600080fd5b50565b6116b0816114b6565b81146116bb57600080fd5b5056fea2646970667358221220258a06d6eacc94a96d64560e87e15d3cf515cfce726bc3ef282100c11852719d64736f6c63430008020033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1047:242",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "90:100:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "100:22:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "115:6:242"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "109:5:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "109:13:242"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "100:5:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "178:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_PhotoNFTData_$524",
                      "nodeType": "YulIdentifier",
                      "src": "131:46:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "131:53:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "131:53:242"
                }
              ]
            },
            "name": "abi_decode_t_contract$_PhotoNFTData_$524_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "68:6:242",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "76:3:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "84:5:242",
                "type": ""
              }
            ],
            "src": "7:183:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "293:227:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "339:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "348:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "351:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "341:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "341:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "341:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "314:7:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "323:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "310:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "310:23:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "335:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "306:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "306:32:242"
                  },
                  "nodeType": "YulIf",
                  "src": "303:2:242"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "365:148:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "380:15:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "394:1:242",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "384:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "409:94:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "475:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "486:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "471:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "471:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "495:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFTData_$524_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "419:51:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "419:84:242"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "409:6:242"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFTData_$524_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "263:9:242",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "274:7:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "286:6:242",
                "type": ""
              }
            ],
            "src": "196:324:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "571:51:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "581:35:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "610:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "592:17:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "592:24:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "581:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "553:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "563:7:242",
                "type": ""
              }
            ],
            "src": "526:96:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "693:51:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "703:35:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "732:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "714:17:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "714:24:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "703:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_PhotoNFTData_$524",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "675:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "685:7:242",
                "type": ""
              }
            ],
            "src": "628:116:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "795:81:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "805:65:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "820:5:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "827:42:242",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "816:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "816:54:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "805:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "777:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "787:7:242",
                "type": ""
              }
            ],
            "src": "750:126:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "945:99:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1022:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1031:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1034:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1024:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1024:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1024:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "968:5:242"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1013:5:242"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_PhotoNFTData_$524",
                              "nodeType": "YulIdentifier",
                              "src": "975:37:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "975:44:242"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "965:2:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "965:55:242"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "958:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:63:242"
                  },
                  "nodeType": "YulIf",
                  "src": "955:2:242"
                }
              ]
            },
            "name": "validator_revert_t_contract$_PhotoNFTData_$524",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "938:5:242",
                "type": ""
              }
            ],
            "src": "882:162:242"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_PhotoNFTData_$524_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PhotoNFTData_$524(value)\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFTData_$524_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFTData_$524_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_PhotoNFTData_$524(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_PhotoNFTData_$524(value) {\n        if iszero(eq(value, cleanup_t_contract$_PhotoNFTData_$524(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 242,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:18772:242",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:242"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:242"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:242"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:242",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:242",
                "type": ""
              }
            ],
            "src": "7:139:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "201:84:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "211:29:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "233:6:242"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "220:12:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "220:20:242"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "211:5:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "273:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "249:23:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:30:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:30:242"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "179:6:242",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "187:3:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "195:5:242",
                "type": ""
              }
            ],
            "src": "152:133:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "351:77:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "361:22:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "376:6:242"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "370:5:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "370:13:242"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "361:5:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "416:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "392:23:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:30:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "392:30:242"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "329:6:242",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "337:3:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "345:5:242",
                "type": ""
              }
            ],
            "src": "291:137:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "502:103:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "512:29:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "534:6:242"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "521:12:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:20:242"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "512:5:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "593:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_PhotoNFT_$110",
                      "nodeType": "YulIdentifier",
                      "src": "550:42:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "550:49:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "550:49:242"
                }
              ]
            },
            "name": "abi_decode_t_contract$_PhotoNFT_$110",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "480:6:242",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "488:3:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "496:5:242",
                "type": ""
              }
            ],
            "src": "434:171:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "663:87:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "673:29:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "695:6:242"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "682:12:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "682:20:242"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "673:5:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "738:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "711:26:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "711:33:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "711:33:242"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "641:6:242",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "649:3:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "657:5:242",
                "type": ""
              }
            ],
            "src": "611:139:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "822:196:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "868:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "877:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "880:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "870:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "870:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "870:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "843:7:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "852:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:23:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "864:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "835:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:32:242"
                  },
                  "nodeType": "YulIf",
                  "src": "832:2:242"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "894:117:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "909:15:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:1:242",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "913:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "938:63:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "973:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "984:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "969:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "969:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "993:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "948:20:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "948:53:242"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "938:6:242"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "792:9:242",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "803:7:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "815:6:242",
                "type": ""
              }
            ],
            "src": "756:262:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1098:204:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1144:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1153:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1156:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1146:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1146:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1146:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1119:7:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1128:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1115:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:23:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1140:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1111:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1111:32:242"
                  },
                  "nodeType": "YulIf",
                  "src": "1108:2:242"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1170:125:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1185:15:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1199:1:242",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1189:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1214:71:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1257:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1268:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1253:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1253:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1277:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1224:28:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1224:61:242"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1214:6:242"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1068:9:242",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1079:7:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1091:6:242",
                "type": ""
              }
            ],
            "src": "1024:278:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1390:212:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1436:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1445:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1448:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1438:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1438:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1438:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1411:7:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1420:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1407:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1407:23:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1432:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1403:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1403:32:242"
                  },
                  "nodeType": "YulIf",
                  "src": "1400:2:242"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1462:133:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1477:15:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1491:1:242",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1481:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1506:79:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1557:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1568:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1553:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1553:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1577:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFT_$110",
                          "nodeType": "YulIdentifier",
                          "src": "1516:36:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1516:69:242"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1506:6:242"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFT_$110",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1360:9:242",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1371:7:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1383:6:242",
                "type": ""
              }
            ],
            "src": "1308:294:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1707:340:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1753:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1762:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1765:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1755:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1755:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1755:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1728:7:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1737:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1724:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1724:23:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1749:2:242",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1720:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1720:32:242"
                  },
                  "nodeType": "YulIf",
                  "src": "1717:2:242"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1779:133:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1794:15:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1808:1:242",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1798:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1823:79:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1874:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1885:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1870:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1870:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1894:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFT_$110",
                          "nodeType": "YulIdentifier",
                          "src": "1833:36:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1833:69:242"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1823:6:242"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1922:118:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1937:16:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1951:2:242",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1941:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1967:63:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2002:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2013:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1998:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1998:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2022:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1977:20:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1977:53:242"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1967:6:242"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFT_$110t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1669:9:242",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1680:7:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1692:6:242",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1700:6:242",
                "type": ""
              }
            ],
            "src": "1608:439:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2169:468:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2215:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2224:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2227:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2217:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2217:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2217:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2190:7:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2199:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2186:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2186:23:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2211:2:242",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2182:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2182:32:242"
                  },
                  "nodeType": "YulIf",
                  "src": "2179:2:242"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2241:133:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2256:15:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2270:1:242",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2260:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2285:79:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2336:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2347:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2332:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2332:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2356:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFT_$110",
                          "nodeType": "YulIdentifier",
                          "src": "2295:36:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2295:69:242"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2285:6:242"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2384:118:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2399:16:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2413:2:242",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2403:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2429:63:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2464:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2475:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2460:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2460:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2484:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2439:20:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2439:53:242"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2429:6:242"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2512:118:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2527:16:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2541:2:242",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2531:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2557:63:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2592:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2603:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2588:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2588:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2612:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2567:20:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2567:53:242"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2557:6:242"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFT_$110t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2123:9:242",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2134:7:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2146:6:242",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2154:6:242",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2162:6:242",
                "type": ""
              }
            ],
            "src": "2053:584:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2756:465:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2802:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2811:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2814:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2804:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2804:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2804:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2777:7:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2786:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2773:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2773:23:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2798:2:242",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2769:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2769:32:242"
                  },
                  "nodeType": "YulIf",
                  "src": "2766:2:242"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2828:133:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2843:15:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2857:1:242",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2847:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2872:79:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2923:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2934:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2919:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2919:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2943:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFT_$110",
                          "nodeType": "YulIdentifier",
                          "src": "2882:36:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2882:69:242"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2872:6:242"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2971:118:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2986:16:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3000:2:242",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2990:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3016:63:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3051:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3062:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3047:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3047:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3071:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3026:20:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3026:53:242"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3016:6:242"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3099:115:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3114:16:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3128:2:242",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3118:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3144:60:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3176:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3187:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3172:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3172:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3196:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3154:17:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3154:50:242"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3144:6:242"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFT_$110t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2710:9:242",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2721:7:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2733:6:242",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2741:6:242",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2749:6:242",
                "type": ""
              }
            ],
            "src": "2643:578:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3343:468:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3389:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3398:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3401:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3391:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3391:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3391:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3364:7:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3373:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3360:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3360:23:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3385:2:242",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3356:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3356:32:242"
                  },
                  "nodeType": "YulIf",
                  "src": "3353:2:242"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3415:133:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3430:15:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3444:1:242",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3434:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3459:79:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3510:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3521:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3506:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3506:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3530:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFT_$110",
                          "nodeType": "YulIdentifier",
                          "src": "3469:36:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3469:69:242"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3459:6:242"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3558:118:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3573:16:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3587:2:242",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3577:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3603:63:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3638:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3649:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3634:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3634:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3658:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3613:20:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3613:53:242"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3603:6:242"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3686:118:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3701:16:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3715:2:242",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3705:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3731:63:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3766:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3777:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3762:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3762:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3786:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3741:20:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3741:53:242"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3731:6:242"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFT_$110t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3297:9:242",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3308:7:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3320:6:242",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3328:6:242",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3336:6:242",
                "type": ""
              }
            ],
            "src": "3227:584:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3950:597:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3997:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4006:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4009:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3999:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3999:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3999:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3971:7:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3980:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3967:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3967:23:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3992:3:242",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3963:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3963:33:242"
                  },
                  "nodeType": "YulIf",
                  "src": "3960:2:242"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4023:133:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4038:15:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4052:1:242",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4042:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4067:79:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4118:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4129:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4114:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4114:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4138:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PhotoNFT_$110",
                          "nodeType": "YulIdentifier",
                          "src": "4077:36:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4077:69:242"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4067:6:242"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4166:118:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4181:16:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4195:2:242",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4185:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4211:63:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4246:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4257:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4242:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4242:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4266:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4221:20:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4221:53:242"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4211:6:242"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4294:118:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4309:16:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4323:2:242",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4313:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4339:63:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4374:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4385:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4370:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4370:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4394:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4349:20:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4349:53:242"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4339:6:242"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4422:118:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4437:16:242",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4451:2:242",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4441:6:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4467:63:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4502:9:242"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4513:6:242"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4498:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4498:22:242"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4522:7:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4477:20:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4477:53:242"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "4467:6:242"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PhotoNFT_$110t_uint256t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3896:9:242",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3907:7:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3919:6:242",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3927:6:242",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3935:6:242",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3943:6:242",
                "type": ""
              }
            ],
            "src": "3817:730:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4608:53:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4625:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4648:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4630:17:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4630:24:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4618:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4618:37:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4618:37:242"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4596:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4603:3:242",
                "type": ""
              }
            ],
            "src": "4553:108:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4732:53:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4749:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4772:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4754:17:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4754:24:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4742:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4742:37:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4742:37:242"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4720:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4727:3:242",
                "type": ""
              }
            ],
            "src": "4667:118:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4840:50:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4857:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4877:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4862:14:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4862:21:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4850:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4850:34:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4850:34:242"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4828:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4835:3:242",
                "type": ""
              }
            ],
            "src": "4791:99:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4955:50:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4972:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4992:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4977:14:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4977:21:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4965:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4965:34:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4965:34:242"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4943:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4950:3:242",
                "type": ""
              }
            ],
            "src": "4896:109:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5066:53:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5083:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5106:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "5088:17:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5088:24:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5076:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5076:37:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5076:37:242"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5054:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5061:3:242",
                "type": ""
              }
            ],
            "src": "5011:108:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5190:53:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5207:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5230:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "5212:17:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5212:24:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5200:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5200:37:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5200:37:242"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5178:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5185:3:242",
                "type": ""
              }
            ],
            "src": "5125:118:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5334:86:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5351:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5407:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_PhotoNFTData_$524_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5356:50:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5356:57:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5344:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5344:70:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5344:70:242"
                }
              ]
            },
            "name": "abi_encode_t_contract$_PhotoNFTData_$524_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5322:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5329:3:242",
                "type": ""
              }
            ],
            "src": "5249:171:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5507:82:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5524:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5576:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_PhotoNFT_$110_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5529:46:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5529:53:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5517:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5517:66:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5517:66:242"
                }
              ]
            },
            "name": "abi_encode_t_contract$_PhotoNFT_$110_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5495:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5502:3:242",
                "type": ""
              }
            ],
            "src": "5426:163:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5668:74:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5685:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5729:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_0_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5690:38:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5690:45:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5678:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5678:58:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5678:58:242"
                }
              ]
            },
            "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5656:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5663:3:242",
                "type": ""
              }
            ],
            "src": "5595:147:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5894:220:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5904:74:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5970:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5975:2:242",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5911:58:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5911:67:242"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5904:3:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6076:3:242"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
                      "nodeType": "YulIdentifier",
                      "src": "5987:88:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5987:93:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5987:93:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6089:19:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6100:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6105:2:242",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6096:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6096:12:242"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6089:3:242"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5882:3:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5890:3:242",
                "type": ""
              }
            ],
            "src": "5748:366:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6266:220:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6276:74:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6342:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6347:2:242",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6283:58:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6283:67:242"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6276:3:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6448:3:242"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                      "nodeType": "YulIdentifier",
                      "src": "6359:88:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6359:93:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6359:93:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6461:19:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6472:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6477:2:242",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6468:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6468:12:242"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6461:3:242"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6254:3:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6262:3:242",
                "type": ""
              }
            ],
            "src": "6120:366:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6638:220:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6648:74:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6714:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6719:2:242",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6655:58:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6655:67:242"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6648:3:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6820:3:242"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                      "nodeType": "YulIdentifier",
                      "src": "6731:88:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:93:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6731:93:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6833:19:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6844:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6849:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6840:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6840:12:242"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6833:3:242"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6626:3:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6634:3:242",
                "type": ""
              }
            ],
            "src": "6492:366:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6993:40:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7010:3:242"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7015:11:242",
                        "type": "",
                        "value": "Cancelled"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7003:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7003:24:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7003:24:242"
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6988:3:242",
                "type": ""
              }
            ],
            "src": "6864:169:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7185:219:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7195:73:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7261:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7266:1:242",
                        "type": "",
                        "value": "9"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7202:58:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7202:66:242"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7195:3:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7366:3:242"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                      "nodeType": "YulIdentifier",
                      "src": "7277:88:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7277:93:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7277:93:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7379:19:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7390:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7395:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7386:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7386:12:242"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7379:3:242"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7173:3:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7181:3:242",
                "type": ""
              }
            ],
            "src": "7039:365:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7539:35:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7556:3:242"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7561:6:242",
                        "type": "",
                        "value": "Open"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7549:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7549:19:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7549:19:242"
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7534:3:242",
                "type": ""
              }
            ],
            "src": "7410:164:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7726:219:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7736:73:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7802:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7807:1:242",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7743:58:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7743:66:242"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7736:3:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7907:3:242"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                      "nodeType": "YulIdentifier",
                      "src": "7818:88:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7818:93:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7818:93:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7920:19:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7931:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7936:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7927:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7927:12:242"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7920:3:242"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7714:3:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7722:3:242",
                "type": ""
              }
            ],
            "src": "7580:365:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8133:929:242",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8143:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8159:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8164:4:242",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8155:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8155:14:242"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "8147:4:242",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8179:166:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8216:43:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8246:5:242"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8253:4:242",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8242:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8242:16:242"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8236:5:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8236:23:242"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8220:12:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8306:12:242"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8324:3:242"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8329:4:242",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8320:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8320:14:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8272:33:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8272:63:242"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8272:63:242"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8355:167:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8393:43:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8423:5:242"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8430:4:242",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8419:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8419:16:242"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8413:5:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8413:23:242"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8397:12:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8483:12:242"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8501:3:242"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8506:4:242",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8497:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8497:14:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8449:33:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8449:63:242"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8449:63:242"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8532:170:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8573:43:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8603:5:242"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8610:4:242",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8599:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8599:16:242"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8593:5:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8593:23:242"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8577:12:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8663:12:242"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8681:3:242"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8686:4:242",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8677:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8677:14:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8629:33:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8629:63:242"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8629:63:242"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8712:166:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8749:43:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8779:5:242"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8786:4:242",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8775:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8775:16:242"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8769:5:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8769:23:242"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8753:12:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8839:12:242"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8857:3:242"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8862:4:242",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8853:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8853:14:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bytes32_to_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "8805:33:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8805:63:242"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8805:63:242"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8888:167:242",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8932:43:242",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8962:5:242"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8969:4:242",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8958:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8958:16:242"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8952:5:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8952:23:242"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8936:12:242",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9016:12:242"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9034:3:242"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9039:4:242",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9030:3:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9030:14:242"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "8988:27:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8988:57:242"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8988:57:242"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Trade_$1009_memory_ptr_to_t_struct$_Trade_$1009_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8120:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8127:3:242",
                "type": ""
              }
            ],
            "src": "8021:1041:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9123:53:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9140:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9163:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9145:17:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9145:24:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9133:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9133:37:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9133:37:242"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9111:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9118:3:242",
                "type": ""
              }
            ],
            "src": "9068:108:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9247:53:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9264:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9287:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9269:17:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9269:24:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9257:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9257:37:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9257:37:242"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9235:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9242:3:242",
                "type": ""
              }
            ],
            "src": "9182:118:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9460:288:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9470:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9482:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9493:2:242",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9478:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9478:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9470:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9550:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9563:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9574:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9559:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9559:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9506:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9506:71:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9506:71:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9631:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9644:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9655:2:242",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9640:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9640:18:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9587:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9587:72:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9587:72:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9713:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9726:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9737:2:242",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9722:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9722:18:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9669:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9669:72:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9669:72:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9416:9:242",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9428:6:242",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9436:6:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9444:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9455:4:242",
                "type": ""
              }
            ],
            "src": "9306:442:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9874:200:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9884:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9896:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9907:2:242",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9892:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9892:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9884:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9964:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9977:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9988:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9973:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9973:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9920:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9920:71:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9920:71:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10039:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10052:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10063:2:242",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10048:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10048:18:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10001:37:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10001:66:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10001:66:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9838:9:242",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9850:6:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9858:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9869:4:242",
                "type": ""
              }
            ],
            "src": "9754:320:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10269:269:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10279:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10291:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10302:2:242",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10287:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10287:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10279:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10359:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10372:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10383:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10368:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10368:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10315:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10315:71:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10315:71:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10516:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10527:2:242",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10512:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10512:18:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10396:114:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10396:135:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10396:135:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10241:9:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10253:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10264:4:242",
                "type": ""
              }
            ],
            "src": "10080:458:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10733:269:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10743:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10755:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10766:2:242",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10751:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10751:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10743:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10823:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10836:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10847:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10832:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10832:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10779:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10779:71:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10779:71:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10980:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10991:2:242",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10976:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10976:18:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10860:114:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10860:135:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10860:135:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10705:9:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10717:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10728:4:242",
                "type": ""
              }
            ],
            "src": "10544:458:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11212:448:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11222:27:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11234:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11245:3:242",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11230:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11230:19:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11222:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11303:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11316:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11327:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11312:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11312:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11259:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11259:71:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11259:71:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11384:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11397:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11408:2:242",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11393:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11393:18:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11340:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11340:72:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11340:72:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11466:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11479:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11490:2:242",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11475:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11475:18:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11422:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11422:72:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11422:72:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11548:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11561:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11572:2:242",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11557:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11557:18:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11504:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11504:72:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11504:72:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "11624:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11637:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11648:3:242",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11633:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11633:19:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11586:37:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11586:67:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11586:67:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes32_t_bool__to_t_address_t_uint256_t_uint256_t_bytes32_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11152:9:242",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "11164:6:242",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11172:6:242",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11180:6:242",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11188:6:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11196:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11207:4:242",
                "type": ""
              }
            ],
            "src": "11008:652:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11784:144:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11794:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11806:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11817:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11802:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11802:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11794:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11894:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11907:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11918:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11903:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11903:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_PhotoNFTData_$524_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11830:63:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11830:91:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11830:91:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PhotoNFTData_$524__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11756:9:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11768:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11779:4:242",
                "type": ""
              }
            ],
            "src": "11666:262:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12070:216:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12080:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12092:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12103:2:242",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12088:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12088:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12080:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12176:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12189:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12200:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12185:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12185:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_PhotoNFT_$110_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12116:59:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12116:87:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12116:87:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12251:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12264:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12275:2:242",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12260:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12260:18:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12213:37:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12213:66:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12213:66:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PhotoNFT_$110_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12034:9:242",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12046:6:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12054:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12065:4:242",
                "type": ""
              }
            ],
            "src": "11934:352:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12543:436:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12553:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12565:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12576:2:242",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12561:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12561:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12553:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12649:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12662:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12673:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12658:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12658:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_PhotoNFT_$110_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12589:59:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12589:87:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12589:87:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12697:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12708:2:242",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12693:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12693:18:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12717:4:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12723:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12713:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12713:20:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12686:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12686:48:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12686:48:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12743:139:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12877:4:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12751:124:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12751:131:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12743:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12944:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12957:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12968:2:242",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12953:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12953:18:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12892:51:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12892:80:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12892:80:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PhotoNFT_$110_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_t_rational_0_by_1__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12507:9:242",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12519:6:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12527:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12538:4:242",
                "type": ""
              }
            ],
            "src": "12292:687:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13228:428:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13238:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13250:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13261:2:242",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13246:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13246:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13238:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13334:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13347:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13358:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13343:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13343:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_PhotoNFT_$110_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13274:59:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13274:87:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13274:87:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13382:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13393:2:242",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13378:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13378:18:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13402:4:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13408:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13398:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13398:20:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13371:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13371:48:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13371:48:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13428:139:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13562:4:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13436:124:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13436:131:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13428:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13621:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13634:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13645:2:242",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13630:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13630:18:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13577:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13577:72:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13577:72:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PhotoNFT_$110_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13192:9:242",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13204:6:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13212:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13223:4:242",
                "type": ""
              }
            ],
            "src": "12985:671:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13833:248:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13843:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13855:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13866:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13851:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13851:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13843:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13890:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13901:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13886:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13886:17:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13909:4:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13915:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13905:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13905:20:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13879:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13879:47:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13879:47:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13935:139:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14069:4:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13943:124:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13943:131:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13935:4:242"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13813:9:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13828:4:242",
                "type": ""
              }
            ],
            "src": "13662:419:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14258:248:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14268:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14280:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14291:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14276:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14276:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14268:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14315:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14326:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14311:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14311:17:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14334:4:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14340:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14330:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14330:20:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14304:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14304:47:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14304:47:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14360:139:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14494:4:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14368:124:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14368:131:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14360:4:242"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14238:9:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14253:4:242",
                "type": ""
              }
            ],
            "src": "14087:419:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14683:248:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14693:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14705:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14716:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14701:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14701:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14693:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14740:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14751:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14736:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14736:17:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14759:4:242"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14765:9:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14755:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14755:20:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14729:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14729:47:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14729:47:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14785:139:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14919:4:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14793:124:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14793:131:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14785:4:242"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14663:9:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14678:4:242",
                "type": ""
              }
            ],
            "src": "14512:419:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15081:171:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15091:27:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15103:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15114:3:242",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15099:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15099:19:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15091:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15218:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15231:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15242:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15227:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15227:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Trade_$1009_memory_ptr_to_t_struct$_Trade_$1009_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15128:89:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15128:117:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15128:117:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Trade_$1009_memory_ptr__to_t_struct$_Trade_$1009_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15053:9:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15065:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15076:4:242",
                "type": ""
              }
            ],
            "src": "14937:315:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15354:73:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15371:3:242"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15376:6:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15364:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15364:19:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15364:19:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15392:29:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15411:3:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15416:4:242",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15407:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15407:14:242"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "15392:11:242"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15326:3:242",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15331:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "15342:11:242",
                "type": ""
              }
            ],
            "src": "15258:169:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15477:261:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15487:25:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15510:1:242"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15492:17:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15492:20:242"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15487:1:242"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15521:25:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15544:1:242"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "15526:17:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15526:20:242"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15521:1:242"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15684:22:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15686:16:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15686:18:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15686:18:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15605:1:242"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15612:66:242",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15680:1:242"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15608:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15608:74:242"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15602:2:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15602:81:242"
                  },
                  "nodeType": "YulIf",
                  "src": "15599:2:242"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15716:16:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15727:1:242"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15730:1:242"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15723:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15723:9:242"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "15716:3:242"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15464:1:242",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15467:1:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "15473:3:242",
                "type": ""
              }
            ],
            "src": "15433:305:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15789:51:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15799:35:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15828:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "15810:17:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15810:24:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15799:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15771:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15781:7:242",
                "type": ""
              }
            ],
            "src": "15744:96:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15888:48:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15898:32:242",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15923:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15916:6:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15916:13:242"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15909:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15909:21:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15898:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15870:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15880:7:242",
                "type": ""
              }
            ],
            "src": "15846:90:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15987:32:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15997:16:242",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "16008:5:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "15997:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15969:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "15979:7:242",
                "type": ""
              }
            ],
            "src": "15942:77:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16086:51:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16096:35:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16125:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "16107:17:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16107:24:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "16096:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_PhotoNFT_$110",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16068:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "16078:7:242",
                "type": ""
              }
            ],
            "src": "16025:112:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16188:81:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16198:65:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16213:5:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16220:42:242",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "16209:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16209:54:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "16198:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16170:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "16180:7:242",
                "type": ""
              }
            ],
            "src": "16143:126:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16320:32:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16330:16:242",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "16341:5:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "16330:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16302:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "16312:7:242",
                "type": ""
              }
            ],
            "src": "16275:77:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16438:86:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16448:70:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16512:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_PhotoNFTData_$524_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "16461:50:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16461:57:242"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "16448:9:242"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_PhotoNFTData_$524_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16418:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "16428:9:242",
                "type": ""
              }
            ],
            "src": "16358:166:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16610:53:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16620:37:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16651:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "16633:17:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16633:24:242"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "16620:9:242"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_PhotoNFTData_$524_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16590:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "16600:9:242",
                "type": ""
              }
            ],
            "src": "16530:133:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16745:82:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16755:66:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16815:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_PhotoNFT_$110_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "16768:46:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16768:53:242"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "16755:9:242"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_PhotoNFT_$110_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16725:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "16735:9:242",
                "type": ""
              }
            ],
            "src": "16669:158:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16909:53:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16919:37:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16950:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "16932:17:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16932:24:242"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "16919:9:242"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_PhotoNFT_$110_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16889:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "16899:9:242",
                "type": ""
              }
            ],
            "src": "16833:129:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17036:53:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17046:37:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17077:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "17059:17:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17059:24:242"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "17046:9:242"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_0_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17016:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "17026:9:242",
                "type": ""
              }
            ],
            "src": "16968:121:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17123:152:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17140:1:242",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17143:77:242",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17133:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17133:88:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17133:88:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17237:1:242",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17240:4:242",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17230:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17230:15:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17230:15:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17261:1:242",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17264:4:242",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "17254:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17254:15:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17254:15:242"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "17095:180:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17387:119:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17409:6:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17417:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17405:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17405:14:242"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17421:34:242",
                        "type": "",
                        "value": "Trade can be cancelled only by s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17398:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17398:58:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17398:58:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17477:6:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17485:2:242",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17473:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17473:15:242"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17490:8:242",
                        "type": "",
                        "value": "eller."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17466:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17466:33:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17466:33:242"
                }
              ]
            },
            "name": "store_literal_in_memory_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17379:6:242",
                "type": ""
              }
            ],
            "src": "17281:225:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17618:114:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17640:6:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17648:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17636:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17636:14:242"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17652:34:242",
                        "type": "",
                        "value": "Trade can be open only by seller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17629:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17629:58:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17629:58:242"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17708:6:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17716:2:242",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17704:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17704:15:242"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17721:3:242",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17697:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17697:28:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17697:28:242"
                }
              ]
            },
            "name": "store_literal_in_memory_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17610:6:242",
                "type": ""
              }
            ],
            "src": "17512:220:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17844:62:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "17866:6:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17874:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17862:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17862:14:242"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17878:20:242",
                        "type": "",
                        "value": "Trade is not Open."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17855:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17855:44:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17855:44:242"
                }
              ]
            },
            "name": "store_literal_in_memory_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "17836:6:242",
                "type": ""
              }
            ],
            "src": "17738:168:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18018:53:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18040:6:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18048:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18036:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18036:14:242"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18052:11:242",
                        "type": "",
                        "value": "Cancelled"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18029:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18029:35:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18029:35:242"
                }
              ]
            },
            "name": "store_literal_in_memory_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18010:6:242",
                "type": ""
              }
            ],
            "src": "17912:159:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18183:48:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18205:6:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18213:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18201:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18201:14:242"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18217:6:242",
                        "type": "",
                        "value": "Open"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18194:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18194:30:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18194:30:242"
                }
              ]
            },
            "name": "store_literal_in_memory_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18175:6:242",
                "type": ""
              }
            ],
            "src": "18077:154:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18280:79:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18337:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18346:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18349:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18339:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18339:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18339:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18303:5:242"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18328:5:242"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "18310:17:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18310:24:242"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "18300:2:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18300:35:242"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18293:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18293:43:242"
                  },
                  "nodeType": "YulIf",
                  "src": "18290:2:242"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18273:5:242",
                "type": ""
              }
            ],
            "src": "18237:122:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18405:76:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18459:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18468:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18471:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18461:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18461:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18461:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18428:5:242"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18450:5:242"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "18435:14:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18435:21:242"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "18425:2:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18425:32:242"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18418:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18418:40:242"
                  },
                  "nodeType": "YulIf",
                  "src": "18415:2:242"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18398:5:242",
                "type": ""
              }
            ],
            "src": "18365:116:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18546:95:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18619:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18628:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18631:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18621:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18621:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18621:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18569:5:242"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18610:5:242"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_PhotoNFT_$110",
                              "nodeType": "YulIdentifier",
                              "src": "18576:33:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18576:40:242"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "18566:2:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18566:51:242"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18559:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18559:59:242"
                  },
                  "nodeType": "YulIf",
                  "src": "18556:2:242"
                }
              ]
            },
            "name": "validator_revert_t_contract$_PhotoNFT_$110",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18539:5:242",
                "type": ""
              }
            ],
            "src": "18487:154:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18690:79:242",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18747:16:242",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18756:1:242",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18759:1:242",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18749:6:242"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18749:12:242"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18749:12:242"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18713:5:242"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18738:5:242"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "18720:17:242"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18720:24:242"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "18710:2:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18710:35:242"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18703:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18703:43:242"
                  },
                  "nodeType": "YulIf",
                  "src": "18700:2:242"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18683:5:242",
                "type": ""
              }
            ],
            "src": "18647:122:242"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_PhotoNFT_$110(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_PhotoNFT_$110(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFT_$110(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFT_$110(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFT_$110t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFT_$110(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFT_$110t_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFT_$110(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFT_$110t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFT_$110(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFT_$110t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFT_$110(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_PhotoNFT_$110t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_PhotoNFT_$110(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_contract$_PhotoNFTData_$524_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PhotoNFTData_$524_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_PhotoNFT_$110_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_PhotoNFT_$110_to_t_address(value))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_bytes32_fromStack(pos) {\n        mstore(pos, \"Cancelled\")\n    }\n\n    function abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_bytes32_fromStack(pos) {\n        mstore(pos, \"Open\")\n    }\n\n    function abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445(pos)\n        end := add(pos, 32)\n    }\n\n    // struct PhotoNFTTradable.Trade -> struct PhotoNFTTradable.Trade\n    function abi_encode_t_struct$_Trade_$1009_memory_ptr_to_t_struct$_Trade_$1009_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // photoId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // photoPrice\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // status\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // premiumStatus\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b__to_t_address_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_bytes32_fromStack( add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445__to_t_address_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_bytes32_fromStack( add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bytes32_t_bool__to_t_address_t_uint256_t_uint256_t_bytes32_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_contract$_PhotoNFTData_$524__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_PhotoNFTData_$524_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_PhotoNFT_$110_t_bool__to_t_address_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_PhotoNFT_$110_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_PhotoNFT_$110_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_t_rational_0_by_1__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_contract$_PhotoNFT_$110_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_contract$_PhotoNFT_$110_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_contract$_PhotoNFT_$110_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Trade_$1009_memory_ptr__to_t_struct$_Trade_$1009_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_Trade_$1009_memory_ptr_to_t_struct$_Trade_$1009_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_contract$_PhotoNFT_$110(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_PhotoNFTData_$524_to_t_address(value) -> converted {\n        converted := convert_t_contract$_PhotoNFTData_$524_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_PhotoNFTData_$524_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_PhotoNFT_$110_to_t_address(value) -> converted {\n        converted := convert_t_contract$_PhotoNFT_$110_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_PhotoNFT_$110_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trade can be cancelled only by s\")\n\n        mstore(add(memPtr, 32), \"eller.\")\n\n    }\n\n    function store_literal_in_memory_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trade can be open only by seller\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function store_literal_in_memory_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trade is not Open.\")\n\n    }\n\n    function store_literal_in_memory_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cancelled\")\n\n    }\n\n    function store_literal_in_memory_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445(memPtr) {\n\n        mstore(add(memPtr, 0), \"Open\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_PhotoNFT_$110(value) {\n        if iszero(eq(value, cleanup_t_contract$_PhotoNFT_$110(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 242,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "294:4911:7:-:0;;;923:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;995:13;980:12;;:28;;;;;;;;;;;;;;;;;;1033:1;1018:12;:16;;;;923:118;294:4911;;7:183:242;;115:6;109:13;100:22;;131:53;178:5;131:53;:::i;:::-;90:100;;;;:::o;196:324::-;;335:2;323:9;314:7;310:23;306:32;303:2;;;351:1;348;341:12;303:2;394:1;419:84;495:7;486:6;475:9;471:22;419:84;:::i;:::-;409:94;;365:148;293:227;;;;:::o;526:96::-;;592:24;610:5;592:24;:::i;:::-;581:35;;571:51;;;:::o;628:116::-;;714:24;732:5;714:24;:::i;:::-;703:35;;693:51;;;:::o;750:126::-;;827:42;820:5;816:54;805:65;;795:81;;;:::o;882:162::-;975:44;1013:5;975:44;:::i;:::-;968:5;965:55;955:2;;1034:1;1031;1024:12;955:2;945:99;:::o;294:4911:7:-;;;;;;;",
  "deployedSourceMap": "294:4911:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4111:527;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2826:554;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3443:473;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;820:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;4931:272;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2133:628;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1338:732;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;544:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4111:527;4249:17;4269:9;4249:29;;4289:18;4310:19;4319:9;4310:8;:19::i;:::-;4289:40;;4347:22;:5;:12;;;:22;4339:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4403:42;4417:9;4428:8;4438:6;4403:13;:42::i;:::-;4471:8;:21;;;4501:4;4508:6;4516:5;:13;;;4471:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4540:26;:5;:12;;:26;;;;;4581:50;4607:9;4581:50;;;;;;:::i;:::-;;;;;;;;4111:527;;;;;:::o;2826:554::-;2901:19;2923:6;:25;2938:8;2923:25;;;;;;;;;;;;;;;2901:47;;2994:5;:12;;;;;;;;;;;;2980:26;;:10;:26;;;2959:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;3147:12;;;;;;;;;;:25;;;3173:8;3196:1;3147:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3208:8;:21;;;3238:4;3245:5;:12;;;;;;;;;;;;3259:5;:13;;;3208:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:26;:5;:12;;:26;;;;3324:49;3350:8;3324:49;;;;;;:::i;:::-;;;;;;;;2826:554;;;:::o;3443:473::-;3572:19;3594:6;:25;3609:8;3594:25;;;;;;;;;;;;;;;3572:47;;3664:5;:12;;;;;;;;;;;;3650:26;;:10;:26;;;3629:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;3745:12;;;;;;;;;;:32;;;3778:8;3788:9;3745:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3831:9;3809:5;:19;;;:31;;;;;;;;;;;;;;;;;;3855:54;3888:8;3899:9;3855:54;;;;;;;:::i;:::-;;;;;;;;3443:473;;;;:::o;820:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4931:272::-;5013:19;;:::i;:::-;5048:18;5069:6;:25;5084:8;5069:25;;;;;;;;;;;;;;;5048:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5111:5;5104:12;;;4931:272;;;:::o;2133:628::-;2251:19;2273:6;:25;2288:8;2273:25;;;;;;;;;;;;;;;2251:47;;2343:5;:12;;;;;;;;;;;;2329:26;;:10;:26;;;2308:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;2482:12;;;;;;;;;;:25;;;2508:8;2526:5;2482:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2542:8;:21;;;2564:10;2584:4;2591:5;:13;;;2542:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2674:21;:5;:12;;:21;;;;2710:44;2736:8;2710:44;;;;;;:::i;:::-;;;;;;;;2133:628;;;;:::o;1338:732::-;1599:1;1583:12;;:17;;;;;;;:::i;:::-;;;;;;;;1770:180;;;;;;;;1798:6;1770:180;;;;;;1827:8;1770:180;;;;1861:11;1770:180;;;;;;;;;1934:5;1770:180;;;;;1742:6;:25;1757:8;1742:25;;;;;;;;;;;;;;;:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1338:732;;;;:::o;544:32::-;;;;;;;;;;;;:::o;4644:218::-;4773:19;4795:6;:25;4810:8;4795:25;;;;;;;;;;;;;;;4773:47;;4845:10;4830:5;:12;;;:25;;;;;;;;;;;;;;;;;;4644:218;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:242:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;351:77;;;;:::o;434:171::-;;534:6;521:20;512:29;;550:49;593:5;550:49;:::i;:::-;502:103;;;;:::o;611:139::-;;695:6;682:20;673:29;;711:33;738:5;711:33;:::i;:::-;663:87;;;;:::o;756:262::-;;864:2;852:9;843:7;839:23;835:32;832:2;;;880:1;877;870:12;832:2;923:1;948:53;993:7;984:6;973:9;969:22;948:53;:::i;:::-;938:63;;894:117;822:196;;;;:::o;1024:278::-;;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1156:1;1153;1146:12;1108:2;1199:1;1224:61;1277:7;1268:6;1257:9;1253:22;1224:61;:::i;:::-;1214:71;;1170:125;1098:204;;;;:::o;1308:294::-;;1432:2;1420:9;1411:7;1407:23;1403:32;1400:2;;;1448:1;1445;1438:12;1400:2;1491:1;1516:69;1577:7;1568:6;1557:9;1553:22;1516:69;:::i;:::-;1506:79;;1462:133;1390:212;;;;:::o;1608:439::-;;;1749:2;1737:9;1728:7;1724:23;1720:32;1717:2;;;1765:1;1762;1755:12;1717:2;1808:1;1833:69;1894:7;1885:6;1874:9;1870:22;1833:69;:::i;:::-;1823:79;;1779:133;1951:2;1977:53;2022:7;2013:6;2002:9;1998:22;1977:53;:::i;:::-;1967:63;;1922:118;1707:340;;;;;:::o;2053:584::-;;;;2211:2;2199:9;2190:7;2186:23;2182:32;2179:2;;;2227:1;2224;2217:12;2179:2;2270:1;2295:69;2356:7;2347:6;2336:9;2332:22;2295:69;:::i;:::-;2285:79;;2241:133;2413:2;2439:53;2484:7;2475:6;2464:9;2460:22;2439:53;:::i;:::-;2429:63;;2384:118;2541:2;2567:53;2612:7;2603:6;2592:9;2588:22;2567:53;:::i;:::-;2557:63;;2512:118;2169:468;;;;;:::o;2643:578::-;;;;2798:2;2786:9;2777:7;2773:23;2769:32;2766:2;;;2814:1;2811;2804:12;2766:2;2857:1;2882:69;2943:7;2934:6;2923:9;2919:22;2882:69;:::i;:::-;2872:79;;2828:133;3000:2;3026:53;3071:7;3062:6;3051:9;3047:22;3026:53;:::i;:::-;3016:63;;2971:118;3128:2;3154:50;3196:7;3187:6;3176:9;3172:22;3154:50;:::i;:::-;3144:60;;3099:115;2756:465;;;;;:::o;3227:584::-;;;;3385:2;3373:9;3364:7;3360:23;3356:32;3353:2;;;3401:1;3398;3391:12;3353:2;3444:1;3469:69;3530:7;3521:6;3510:9;3506:22;3469:69;:::i;:::-;3459:79;;3415:133;3587:2;3613:53;3658:7;3649:6;3638:9;3634:22;3613:53;:::i;:::-;3603:63;;3558:118;3715:2;3741:53;3786:7;3777:6;3766:9;3762:22;3741:53;:::i;:::-;3731:63;;3686:118;3343:468;;;;;:::o;3817:730::-;;;;;3992:3;3980:9;3971:7;3967:23;3963:33;3960:2;;;4009:1;4006;3999:12;3960:2;4052:1;4077:69;4138:7;4129:6;4118:9;4114:22;4077:69;:::i;:::-;4067:79;;4023:133;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;4451:2;4477:53;4522:7;4513:6;4502:9;4498:22;4477:53;:::i;:::-;4467:63;;4422:118;3950:597;;;;;;;:::o;4553:108::-;4630:24;4648:5;4630:24;:::i;:::-;4625:3;4618:37;4608:53;;:::o;4667:118::-;4754:24;4772:5;4754:24;:::i;:::-;4749:3;4742:37;4732:53;;:::o;4791:99::-;4862:21;4877:5;4862:21;:::i;:::-;4857:3;4850:34;4840:50;;:::o;4896:109::-;4977:21;4992:5;4977:21;:::i;:::-;4972:3;4965:34;4955:50;;:::o;5011:108::-;5088:24;5106:5;5088:24;:::i;:::-;5083:3;5076:37;5066:53;;:::o;5125:118::-;5212:24;5230:5;5212:24;:::i;:::-;5207:3;5200:37;5190:53;;:::o;5249:171::-;5356:57;5407:5;5356:57;:::i;:::-;5351:3;5344:70;5334:86;;:::o;5426:163::-;5529:53;5576:5;5529:53;:::i;:::-;5524:3;5517:66;5507:82;;:::o;5595:147::-;5690:45;5729:5;5690:45;:::i;:::-;5685:3;5678:58;5668:74;;:::o;5748:366::-;;5911:67;5975:2;5970:3;5911:67;:::i;:::-;5904:74;;5987:93;6076:3;5987:93;:::i;:::-;6105:2;6100:3;6096:12;6089:19;;5894:220;;;:::o;6120:366::-;;6283:67;6347:2;6342:3;6283:67;:::i;:::-;6276:74;;6359:93;6448:3;6359:93;:::i;:::-;6477:2;6472:3;6468:12;6461:19;;6266:220;;;:::o;6492:366::-;;6655:67;6719:2;6714:3;6655:67;:::i;:::-;6648:74;;6731:93;6820:3;6731:93;:::i;:::-;6849:2;6844:3;6840:12;6833:19;;6638:220;;;:::o;6864:169::-;7015:11;7010:3;7003:24;6993:40;:::o;7039:365::-;;7202:66;7266:1;7261:3;7202:66;:::i;:::-;7195:73;;7277:93;7366:3;7277:93;:::i;:::-;7395:2;7390:3;7386:12;7379:19;;7185:219;;;:::o;7410:164::-;7561:6;7556:3;7549:19;7539:35;:::o;7580:365::-;;7743:66;7807:1;7802:3;7743:66;:::i;:::-;7736:73;;7818:93;7907:3;7818:93;:::i;:::-;7936:2;7931:3;7927:12;7920:19;;7726:219;;;:::o;8021:1041::-;8164:4;8159:3;8155:14;8253:4;8246:5;8242:16;8236:23;8272:63;8329:4;8324:3;8320:14;8306:12;8272:63;:::i;:::-;8179:166;8430:4;8423:5;8419:16;8413:23;8449:63;8506:4;8501:3;8497:14;8483:12;8449:63;:::i;:::-;8355:167;8610:4;8603:5;8599:16;8593:23;8629:63;8686:4;8681:3;8677:14;8663:12;8629:63;:::i;:::-;8532:170;8786:4;8779:5;8775:16;8769:23;8805:63;8862:4;8857:3;8853:14;8839:12;8805:63;:::i;:::-;8712:166;8969:4;8962:5;8958:16;8952:23;8988:57;9039:4;9034:3;9030:14;9016:12;8988:57;:::i;:::-;8888:167;8133:929;;;:::o;9068:108::-;9145:24;9163:5;9145:24;:::i;:::-;9140:3;9133:37;9123:53;;:::o;9182:118::-;9269:24;9287:5;9269:24;:::i;:::-;9264:3;9257:37;9247:53;;:::o;9306:442::-;;9493:2;9482:9;9478:18;9470:26;;9506:71;9574:1;9563:9;9559:17;9550:6;9506:71;:::i;:::-;9587:72;9655:2;9644:9;9640:18;9631:6;9587:72;:::i;:::-;9669;9737:2;9726:9;9722:18;9713:6;9669:72;:::i;:::-;9460:288;;;;;;:::o;9754:320::-;;9907:2;9896:9;9892:18;9884:26;;9920:71;9988:1;9977:9;9973:17;9964:6;9920:71;:::i;:::-;10001:66;10063:2;10052:9;10048:18;10039:6;10001:66;:::i;:::-;9874:200;;;;;:::o;10080:458::-;;10302:2;10291:9;10287:18;10279:26;;10315:71;10383:1;10372:9;10368:17;10359:6;10315:71;:::i;:::-;10396:135;10527:2;10516:9;10512:18;10396:135;:::i;:::-;10269:269;;;;:::o;10544:458::-;;10766:2;10755:9;10751:18;10743:26;;10779:71;10847:1;10836:9;10832:17;10823:6;10779:71;:::i;:::-;10860:135;10991:2;10980:9;10976:18;10860:135;:::i;:::-;10733:269;;;;:::o;11008:652::-;;11245:3;11234:9;11230:19;11222:27;;11259:71;11327:1;11316:9;11312:17;11303:6;11259:71;:::i;:::-;11340:72;11408:2;11397:9;11393:18;11384:6;11340:72;:::i;:::-;11422;11490:2;11479:9;11475:18;11466:6;11422:72;:::i;:::-;11504;11572:2;11561:9;11557:18;11548:6;11504:72;:::i;:::-;11586:67;11648:3;11637:9;11633:19;11624:6;11586:67;:::i;:::-;11212:448;;;;;;;;:::o;11666:262::-;;11817:2;11806:9;11802:18;11794:26;;11830:91;11918:1;11907:9;11903:17;11894:6;11830:91;:::i;:::-;11784:144;;;;:::o;11934:352::-;;12103:2;12092:9;12088:18;12080:26;;12116:87;12200:1;12189:9;12185:17;12176:6;12116:87;:::i;:::-;12213:66;12275:2;12264:9;12260:18;12251:6;12213:66;:::i;:::-;12070:216;;;;;:::o;12292:687::-;;12576:2;12565:9;12561:18;12553:26;;12589:87;12673:1;12662:9;12658:17;12649:6;12589:87;:::i;:::-;12723:9;12717:4;12713:20;12708:2;12697:9;12693:18;12686:48;12751:131;12877:4;12751:131;:::i;:::-;12743:139;;12892:80;12968:2;12957:9;12953:18;12944:6;12892:80;:::i;:::-;12543:436;;;;;:::o;12985:671::-;;13261:2;13250:9;13246:18;13238:26;;13274:87;13358:1;13347:9;13343:17;13334:6;13274:87;:::i;:::-;13408:9;13402:4;13398:20;13393:2;13382:9;13378:18;13371:48;13436:131;13562:4;13436:131;:::i;:::-;13428:139;;13577:72;13645:2;13634:9;13630:18;13621:6;13577:72;:::i;:::-;13228:428;;;;;:::o;13662:419::-;;13866:2;13855:9;13851:18;13843:26;;13915:9;13909:4;13905:20;13901:1;13890:9;13886:17;13879:47;13943:131;14069:4;13943:131;:::i;:::-;13935:139;;13833:248;;;:::o;14087:419::-;;14291:2;14280:9;14276:18;14268:26;;14340:9;14334:4;14330:20;14326:1;14315:9;14311:17;14304:47;14368:131;14494:4;14368:131;:::i;:::-;14360:139;;14258:248;;;:::o;14512:419::-;;14716:2;14705:9;14701:18;14693:26;;14765:9;14759:4;14755:20;14751:1;14740:9;14736:17;14729:47;14793:131;14919:4;14793:131;:::i;:::-;14785:139;;14683:248;;;:::o;14937:315::-;;15114:3;15103:9;15099:19;15091:27;;15128:117;15242:1;15231:9;15227:17;15218:6;15128:117;:::i;:::-;15081:171;;;;:::o;15258:169::-;;15376:6;15371:3;15364:19;15416:4;15411:3;15407:14;15392:29;;15354:73;;;;:::o;15433:305::-;;15492:20;15510:1;15492:20;:::i;:::-;15487:25;;15526:20;15544:1;15526:20;:::i;:::-;15521:25;;15680:1;15612:66;15608:74;15605:1;15602:81;15599:2;;;15686:18;;:::i;:::-;15599:2;15730:1;15727;15723:9;15716:16;;15477:261;;;;:::o;15744:96::-;;15810:24;15828:5;15810:24;:::i;:::-;15799:35;;15789:51;;;:::o;15846:90::-;;15923:5;15916:13;15909:21;15898:32;;15888:48;;;:::o;15942:77::-;;16008:5;15997:16;;15987:32;;;:::o;16025:112::-;;16107:24;16125:5;16107:24;:::i;:::-;16096:35;;16086:51;;;:::o;16143:126::-;;16220:42;16213:5;16209:54;16198:65;;16188:81;;;:::o;16275:77::-;;16341:5;16330:16;;16320:32;;;:::o;16358:166::-;;16461:57;16512:5;16461:57;:::i;:::-;16448:70;;16438:86;;;:::o;16530:133::-;;16633:24;16651:5;16633:24;:::i;:::-;16620:37;;16610:53;;;:::o;16669:158::-;;16768:53;16815:5;16768:53;:::i;:::-;16755:66;;16745:82;;;:::o;16833:129::-;;16932:24;16950:5;16932:24;:::i;:::-;16919:37;;16909:53;;;:::o;16968:121::-;;17059:24;17077:5;17059:24;:::i;:::-;17046:37;;17036:53;;;:::o;17095:180::-;17143:77;17140:1;17133:88;17240:4;17237:1;17230:15;17264:4;17261:1;17254:15;17281:225;17421:34;17417:1;17409:6;17405:14;17398:58;17490:8;17485:2;17477:6;17473:15;17466:33;17387:119;:::o;17512:220::-;17652:34;17648:1;17640:6;17636:14;17629:58;17721:3;17716:2;17708:6;17704:15;17697:28;17618:114;:::o;17738:168::-;17878:20;17874:1;17866:6;17862:14;17855:44;17844:62;:::o;17912:159::-;18052:11;18048:1;18040:6;18036:14;18029:35;18018:53;:::o;18077:154::-;18217:6;18213:1;18205:6;18201:14;18194:30;18183:48;:::o;18237:122::-;18310:24;18328:5;18310:24;:::i;:::-;18303:5;18300:35;18290:2;;18349:1;18346;18339:12;18290:2;18280:79;:::o;18365:116::-;18435:21;18450:5;18435:21;:::i;:::-;18428:5;18425:32;18415:2;;18471:1;18468;18461:12;18415:2;18405:76;:::o;18487:154::-;18576:40;18610:5;18576:40;:::i;:::-;18569:5;18566:51;18556:2;;18631:1;18628;18621:12;18556:2;18546:95;:::o;18647:122::-;18720:24;18738:5;18720:24;:::i;:::-;18713:5;18710:35;18700:2;;18759:1;18756;18749:12;18700:2;18690:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport {PhotoNFT} from \"./PhotoNFT.sol\";\nimport {PhotoNFTData} from \"./PhotoNFTData.sol\";\n\n/**\n * @title - PhotoNFTTradable contract\n * @notice - This contract has role that put on sale of photoNFTs\n */\ncontract PhotoNFTTradable {\n    event TradeStatusChange(address ad, bytes32 status);\n    event TradePremiumStatusChange(address ad, bool status);\n    event OpenTradeInfo(address owner, address sender);\n\n    //cjh\n    // PhotoNFT public photoNFT;\n    PhotoNFTData public photoNFTData;\n\n    struct Trade {\n        address seller;\n        uint256 photoId; // PhotoNFT's token ID\n        uint256 photoPrice;\n        bytes32 status; // Open, Executed, Cancelled\n        bool premiumStatus; // false : not , true: premium\n    }\n    mapping(address => Trade) public trades; // [Key]: PhotoNFT's token ID\n\n    uint256 tradeCounter;\n\n    constructor(PhotoNFTData _photoNFTData) public {\n        photoNFTData = _photoNFTData;\n        tradeCounter = 0;\n    }\n\n    /**\n     * @notice - This method is only executed when a seller create a new PhotoNFT\n     * @dev Opens a new trade. Puts _photoId in escrow.\n     * @param _photoId The id for the photoId to trade.\n     * @param _photoPrice The amount of currency for which to trade the photoId.\n     */\n    function registerTradeWhenCreateNewPhotoNFT(\n        PhotoNFT photoNFT,\n        uint256 _photoId,\n        uint256 _photoPrice,\n        address seller\n    ) public {\n        // photoNFT.transferFrom(msg.sender, address(this), _photoId);\n\n        tradeCounter += 1; /// [Note]: New. Trade count is started from \"1\". This is to align photoId\n\n        //cjh\n        // trades[tradeCounter] = Trade({\n        trades[address(photoNFT)] = Trade({\n            seller: seller,\n            photoId: _photoId,\n            photoPrice: _photoPrice,\n            status: \"Cancelled\",\n            premiumStatus: false\n        });\n        //tradeCounter += 1;  /// [Note]: Original\n        // emit TradeStatusChange(address(photoNFT), \"Open\");\n    }\n\n    /**\n     * @dev Opens a trade by the seller.\n     */\n    function openTrade(\n        PhotoNFT photoNFT,\n        uint256 _photoId,\n        uint256 price\n    ) public {\n        Trade storage trade = trades[address(photoNFT)];\n        require(\n            msg.sender == trade.seller,\n            \"Trade can be open only by seller.\"\n        );\n        // emit OpenTradeInfo(msg.sender, trade.seller);\n\n        photoNFTData.updateStatus(photoNFT, \"Open\", price);\n        photoNFT.transferFrom(msg.sender, address(this), trade.photoId);\n        // trades[photoNFT].status = \"Open\";\n        //cjh\n        trade.status = \"Open\";\n        emit TradeStatusChange(address(photoNFT), \"Open\");\n    }\n\n    /**\n     * @dev Cancels a trade by the seller.\n     */\n    function cancelTrade(PhotoNFT photoNFT, uint256 _photoId) public {\n        Trade storage trade = trades[address(photoNFT)];\n\n        require(\n            msg.sender == trade.seller,\n            \"Trade can be cancelled only by seller.\"\n        );\n        // require(trade.status == \"Open\", \"Trade is not Open.\");\n\n        photoNFTData.updateStatus(photoNFT, \"Cancelled\", 0);\n        photoNFT.transferFrom(address(this), trade.seller, trade.photoId);\n        trade.status = \"Cancelled\";\n        emit TradeStatusChange(address(photoNFT), \"Cancelled\");\n    }\n\n    /**\n     * @dev Opens a trade by the seller.\n     */\n    function updatePremiumStatus(\n        PhotoNFT photoNFT,\n        uint256 _photoId,\n        bool _newState\n    ) public {\n        Trade storage trade = trades[address(photoNFT)];\n        require(\n            msg.sender == trade.seller,\n            \"Trade can be open only by seller.\"\n        );\n        photoNFTData.updatePremiumStatus(photoNFT, _newState);\n\n        trade.premiumStatus = _newState;\n        emit TradePremiumStatusChange(address(photoNFT), _newState);\n    }\n\n    /**\n     * @dev Executes a trade. Must have approved this contract to transfer the amount of currency specified to the seller. Transfers ownership of the photoId to the filler.\n     */\n    function transferOwnershipOfPhotoNFT(\n        PhotoNFT _photoNFT,\n        uint256 _photoId,\n        address _buyer\n    ) public {\n        PhotoNFT photoNFT = _photoNFT;\n\n        Trade memory trade = getTrade(_photoNFT);\n        require(trade.status == \"Open\", \"Trade is not Open.\");\n\n        _updateSeller(_photoNFT, _photoId, _buyer);\n\n        //cjh\n\n        photoNFT.transferFrom(address(this), _buyer, trade.photoId);\n        trade.status = \"Cancelled\";\n        emit TradeStatusChange(address(_photoNFT), \"Cancelled\");\n    }\n\n    function _updateSeller(\n        PhotoNFT photoNFT,\n        uint256 _photoId,\n        address _newSeller\n    ) internal {\n        Trade storage trade = trades[address(photoNFT)];\n        trade.seller = _newSeller;\n    }\n\n    /**\n     * @dev - Returns the details for a trade.\n     */\n    function getTrade(PhotoNFT photoNFT)\n        public\n        view\n        returns (Trade memory trade_)\n    {\n        Trade memory trade = trades[address(photoNFT)];\n        return trade;\n        //return (trade.seller, trade.photoId, trade.photoPrice, trade.status);\n    }\n}\n",
  "sourcePath": "D:\\marketplace\\frontend (2)\\contracts\\PhotoNFTTradable.sol",
  "ast": {
    "absolutePath": "project:/contracts/PhotoNFTTradable.sol",
    "exportedSymbols": {
      "PhotoNFT": [
        110
      ],
      "PhotoNFTData": [
        524
      ],
      "PhotoNFTTradable": [
        1361
      ]
    },
    "id": 1362,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 971,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "id": 972,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:7"
      },
      {
        "absolutePath": "project:/contracts/PhotoNFT.sol",
        "file": "./PhotoNFT.sol",
        "id": 974,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1362,
        "sourceUnit": 111,
        "src": "91:40:7",
        "symbolAliases": [
          {
            "foreign": {
              "id": 973,
              "name": "PhotoNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "99:8:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PhotoNFTData.sol",
        "file": "./PhotoNFTData.sol",
        "id": 976,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1362,
        "sourceUnit": 525,
        "src": "132:48:7",
        "symbolAliases": [
          {
            "foreign": {
              "id": 975,
              "name": "PhotoNFTData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "140:12:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 977,
          "nodeType": "StructuredDocumentation",
          "src": "182:111:7",
          "text": " @title - PhotoNFTTradable contract\n @notice - This contract has role that put on sale of photoNFTs"
        },
        "fullyImplemented": true,
        "id": 1361,
        "linearizedBaseContracts": [
          1361
        ],
        "name": "PhotoNFTTradable",
        "nameLocation": "303:16:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 983,
            "name": "TradeStatusChange",
            "nameLocation": "332:17:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 979,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ad",
                  "nameLocation": "358:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "350:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 981,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "370:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "362:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:28:7"
            },
            "src": "326:52:7"
          },
          {
            "anonymous": false,
            "id": 989,
            "name": "TradePremiumStatusChange",
            "nameLocation": "389:24:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ad",
                  "nameLocation": "422:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "414:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "431:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "426:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:25:7"
            },
            "src": "383:56:7"
          },
          {
            "anonymous": false,
            "id": 995,
            "name": "OpenTradeInfo",
            "nameLocation": "450:13:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 991,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "472:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "464:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 993,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "487:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "479:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:31:7"
            },
            "src": "444:51:7"
          },
          {
            "constant": false,
            "functionSelector": "ec039514",
            "id": 998,
            "mutability": "mutable",
            "name": "photoNFTData",
            "nameLocation": "564:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1361,
            "src": "544:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PhotoNFTData_$524",
              "typeString": "contract PhotoNFTData"
            },
            "typeName": {
              "id": 997,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 996,
                "name": "PhotoNFTData",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 524,
                "src": "544:12:7"
              },
              "referencedDeclaration": 524,
              "src": "544:12:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                "typeString": "contract PhotoNFTData"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PhotoNFTTradable.Trade",
            "id": 1009,
            "members": [
              {
                "constant": false,
                "id": 1000,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "614:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 1009,
                "src": "606:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 999,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "606:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1002,
                "mutability": "mutable",
                "name": "photoId",
                "nameLocation": "638:7:7",
                "nodeType": "VariableDeclaration",
                "scope": 1009,
                "src": "630:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1001,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "630:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1004,
                "mutability": "mutable",
                "name": "photoPrice",
                "nameLocation": "686:10:7",
                "nodeType": "VariableDeclaration",
                "scope": 1009,
                "src": "678:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1003,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "678:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1006,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "714:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 1009,
                "src": "706:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1005,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "706:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1008,
                "mutability": "mutable",
                "name": "premiumStatus",
                "nameLocation": "764:13:7",
                "nodeType": "VariableDeclaration",
                "scope": 1009,
                "src": "759:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1007,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "759:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Trade",
            "nameLocation": "590:5:7",
            "nodeType": "StructDefinition",
            "scope": 1361,
            "src": "583:232:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a9f752e5",
            "id": 1014,
            "mutability": "mutable",
            "name": "trades",
            "nameLocation": "853:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 1361,
            "src": "820:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
              "typeString": "mapping(address => struct PhotoNFTTradable.Trade)"
            },
            "typeName": {
              "id": 1013,
              "keyType": {
                "id": 1010,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "828:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "820:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                "typeString": "mapping(address => struct PhotoNFTTradable.Trade)"
              },
              "valueType": {
                "id": 1012,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1011,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1009,
                  "src": "839:5:7"
                },
                "referencedDeclaration": 1009,
                "src": "839:5:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                  "typeString": "struct PhotoNFTTradable.Trade"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1016,
            "mutability": "mutable",
            "name": "tradeCounter",
            "nameLocation": "904:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1361,
            "src": "896:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1015,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "896:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "970:71:7",
              "statements": [
                {
                  "expression": {
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1022,
                      "name": "photoNFTData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "980:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                        "typeString": "contract PhotoNFTData"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1023,
                      "name": "_photoNFTData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "995:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                        "typeString": "contract PhotoNFTData"
                      }
                    },
                    "src": "980:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                      "typeString": "contract PhotoNFTData"
                    }
                  },
                  "id": 1025,
                  "nodeType": "ExpressionStatement",
                  "src": "980:28:7"
                },
                {
                  "expression": {
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1026,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "1018:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1018:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "1018:16:7"
                }
              ]
            },
            "id": 1031,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "mutability": "mutable",
                  "name": "_photoNFTData",
                  "nameLocation": "948:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "935:26:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                    "typeString": "contract PhotoNFTData"
                  },
                  "typeName": {
                    "id": 1018,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1017,
                      "name": "PhotoNFTData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 524,
                      "src": "935:12:7"
                    },
                    "referencedDeclaration": 524,
                    "src": "935:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                      "typeString": "contract PhotoNFTData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "934:28:7"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "970:0:7"
            },
            "scope": 1361,
            "src": "923:118:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1063,
              "nodeType": "Block",
              "src": "1501:569:7",
              "statements": [
                {
                  "expression": {
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1044,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "1583:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1599:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1583:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:17:7"
                },
                {
                  "documentation": "[Note]: New. Trade count is started from \"1\". This is to align photoId",
                  "expression": {
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1048,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "1742:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                          "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                        }
                      },
                      "id": 1053,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1051,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1035,
                            "src": "1757:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1749:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1049,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1749:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1749:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1742:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_storage",
                        "typeString": "struct PhotoNFTTradable.Trade storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1055,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "1798:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1056,
                          "name": "_photoId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1037,
                          "src": "1827:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1057,
                          "name": "_photoPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "1861:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "43616e63656c6c6564",
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1894:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                            "typeString": "literal_string \"Cancelled\""
                          },
                          "value": "Cancelled"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1934:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                            "typeString": "literal_string \"Cancelled\""
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1054,
                        "name": "Trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "1770:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trade_$1009_storage_ptr_$",
                          "typeString": "type(struct PhotoNFTTradable.Trade storage pointer)"
                        }
                      },
                      "id": 1060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "seller",
                        "photoId",
                        "photoPrice",
                        "status",
                        "premiumStatus"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1770:180:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade memory"
                      }
                    },
                    "src": "1742:208:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "id": 1062,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:208:7"
                }
              ]
            },
            "documentation": {
              "id": 1032,
              "nodeType": "StructuredDocumentation",
              "src": "1047:286:7",
              "text": " @notice - This method is only executed when a seller create a new PhotoNFT\n @dev Opens a new trade. Puts _photoId in escrow.\n @param _photoId The id for the photoId to trade.\n @param _photoPrice The amount of currency for which to trade the photoId."
            },
            "functionSelector": "dee98aad",
            "id": 1064,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerTradeWhenCreateNewPhotoNFT",
            "nameLocation": "1347:34:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "1400:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "1391:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1034,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1033,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "1391:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "1391:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "1426:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "1418:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "_photoPrice",
                  "nameLocation": "1452:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "1444:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1481:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "1473:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1381:112:7"
            },
            "returnParameters": {
              "id": 1043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1501:0:7"
            },
            "scope": 1361,
            "src": "1338:732:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1129,
              "nodeType": "Block",
              "src": "2241:520:7",
              "statements": [
                {
                  "assignments": [
                    1077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1077,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "2265:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1129,
                      "src": "2251:19:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1076,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1075,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "2251:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "2251:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1084,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1078,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "2273:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1083,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1081,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1068,
                          "src": "2288:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2280:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2280:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2280:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2273:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2251:47:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1086,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2329:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2329:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1088,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "2343:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1000,
                          "src": "2343:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2329:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206265206f70656e206f6e6c792062792073656c6c65722e",
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2369:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        },
                        "value": "Trade can be open only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2308:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:106:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1093,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:106:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1097,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "2508:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "hexValue": "4f70656e",
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2518:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        "value": "Open"
                      },
                      {
                        "id": 1099,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "2526:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1094,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "2482:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 269,
                      "src": "2482:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$110_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,string memory,uint256) external returns (bool)"
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2482:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "2482:50:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1105,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2564:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2564:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1109,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2584:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2576:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2576:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2576:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1111,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1077,
                          "src": "2591:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1002,
                        "src": "2591:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1102,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "2542:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21538,
                      "src": "2542:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2542:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1114,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:63:7"
                },
                {
                  "expression": {
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1115,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1077,
                        "src": "2674:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1117,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1006,
                      "src": "2674:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4f70656e",
                      "id": 1118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2689:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                        "typeString": "literal_string \"Open\""
                      },
                      "value": "Open"
                    },
                    "src": "2674:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1120,
                  "nodeType": "ExpressionStatement",
                  "src": "2674:21:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1124,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1068,
                            "src": "2736:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2728:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2728:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2728:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4f70656e",
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2747:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        "value": "Open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        }
                      ],
                      "id": 1121,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "2710:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2710:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1128,
                  "nodeType": "EmitStatement",
                  "src": "2705:49:7"
                }
              ]
            },
            "documentation": {
              "id": 1065,
              "nodeType": "StructuredDocumentation",
              "src": "2076:52:7",
              "text": " @dev Opens a trade by the seller."
            },
            "functionSelector": "baea40e2",
            "id": 1130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openTrade",
            "nameLocation": "2142:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "2170:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "2161:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1067,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1066,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "2161:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "2161:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "2196:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "2188:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2222:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "2214:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2214:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2151:82:7"
            },
            "returnParameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2241:0:7"
            },
            "scope": 1361,
            "src": "2133:628:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1193,
              "nodeType": "Block",
              "src": "2891:489:7",
              "statements": [
                {
                  "assignments": [
                    1141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1141,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "2915:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1193,
                      "src": "2901:19:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1140,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1139,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "2901:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "2901:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1148,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1142,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "2923:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1147,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1145,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1134,
                          "src": "2938:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2930:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2930:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2930:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2923:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2901:47:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2980:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2980:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1152,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "2994:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1000,
                          "src": "2994:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2980:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e2062652063616e63656c6c6564206f6e6c792062792073656c6c65722e",
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3020:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
                          "typeString": "literal_string \"Trade can be cancelled only by seller.\""
                        },
                        "value": "Trade can be cancelled only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
                          "typeString": "literal_string \"Trade can be cancelled only by seller.\""
                        }
                      ],
                      "id": 1149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2959:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2959:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1157,
                  "nodeType": "ExpressionStatement",
                  "src": "2959:111:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1161,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "3173:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3183:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      },
                      {
                        "hexValue": "30",
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3196:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 1158,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "3147:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 269,
                      "src": "3147:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$110_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,string memory,uint256) external returns (bool)"
                      }
                    },
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3147:51:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1165,
                  "nodeType": "ExpressionStatement",
                  "src": "3147:51:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1171,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3238:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3230:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1169,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3230:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3230:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1173,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "3245:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1174,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1000,
                        "src": "3245:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1175,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "3259:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1176,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1002,
                        "src": "3259:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1166,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "3208:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21538,
                      "src": "3208:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3208:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1178,
                  "nodeType": "ExpressionStatement",
                  "src": "3208:65:7"
                },
                {
                  "expression": {
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1179,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "3283:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1006,
                      "src": "3283:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "43616e63656c6c6564",
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3298:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                        "typeString": "literal_string \"Cancelled\""
                      },
                      "value": "Cancelled"
                    },
                    "src": "3283:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "3283:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1188,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "3350:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3342:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3342:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3342:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3361:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "id": 1185,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "3324:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3324:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "EmitStatement",
                  "src": "3319:54:7"
                }
              ]
            },
            "documentation": {
              "id": 1131,
              "nodeType": "StructuredDocumentation",
              "src": "2767:54:7",
              "text": " @dev Cancels a trade by the seller."
            },
            "functionSelector": "759c4bf3",
            "id": 1194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTrade",
            "nameLocation": "2835:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "2856:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "2847:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1133,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1132,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "2847:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "2847:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "2874:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "2866:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2846:37:7"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2891:0:7"
            },
            "scope": 1361,
            "src": "2826:554:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1245,
              "nodeType": "Block",
              "src": "3562:354:7",
              "statements": [
                {
                  "assignments": [
                    1207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1207,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "3586:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "3572:19:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1206,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1205,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "3572:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "3572:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1214,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1208,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "3594:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1213,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1211,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1198,
                          "src": "3609:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3601:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1209,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3601:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3601:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3594:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3572:47:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3650:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3650:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1218,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "3664:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1000,
                          "src": "3664:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3650:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206265206f70656e206f6e6c792062792073656c6c65722e",
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3690:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        },
                        "value": "Trade can be open only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        }
                      ],
                      "id": 1215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3629:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3629:106:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1223,
                  "nodeType": "ExpressionStatement",
                  "src": "3629:106:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1227,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "3778:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "id": 1228,
                        "name": "_newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "3788:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1224,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "3745:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePremiumStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 315,
                      "src": "3745:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$110_$_t_bool_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,bool) external returns (bool)"
                      }
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3745:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "3745:53:7"
                },
                {
                  "expression": {
                    "id": 1235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1231,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "3809:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1233,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "premiumStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1008,
                      "src": "3809:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1234,
                      "name": "_newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "3831:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3809:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1236,
                  "nodeType": "ExpressionStatement",
                  "src": "3809:31:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1240,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1198,
                            "src": "3888:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3880:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1238,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3880:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3880:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1242,
                        "name": "_newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "3899:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1237,
                      "name": "TradePremiumStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "3855:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3855:54:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1244,
                  "nodeType": "EmitStatement",
                  "src": "3850:59:7"
                }
              ]
            },
            "documentation": {
              "id": 1195,
              "nodeType": "StructuredDocumentation",
              "src": "3386:52:7",
              "text": " @dev Opens a trade by the seller."
            },
            "functionSelector": "8d6b52f3",
            "id": 1246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePremiumStatus",
            "nameLocation": "3452:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1198,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "3490:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3481:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1197,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1196,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "3481:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "3481:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1200,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "3516:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3508:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3508:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "_newState",
                  "nameLocation": "3539:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3534:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3534:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3471:83:7"
            },
            "returnParameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3562:0:7"
            },
            "scope": 1361,
            "src": "3443:473:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1309,
              "nodeType": "Block",
              "src": "4239:399:7",
              "statements": [
                {
                  "assignments": [
                    1259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1259,
                      "mutability": "mutable",
                      "name": "photoNFT",
                      "nameLocation": "4258:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1309,
                      "src": "4249:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFT_$110",
                        "typeString": "contract PhotoNFT"
                      },
                      "typeName": {
                        "id": 1258,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1257,
                          "name": "PhotoNFT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 110,
                          "src": "4249:8:7"
                        },
                        "referencedDeclaration": 110,
                        "src": "4249:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1261,
                  "initialValue": {
                    "id": 1260,
                    "name": "_photoNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1250,
                    "src": "4269:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4249:29:7"
                },
                {
                  "assignments": [
                    1264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1264,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "4302:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1309,
                      "src": "4289:18:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1263,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1262,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "4289:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "4289:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1268,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1266,
                        "name": "_photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "4319:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      ],
                      "id": 1265,
                      "name": "getTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "4310:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_PhotoNFT_$110_$returns$_t_struct$_Trade_$1009_memory_ptr_$",
                        "typeString": "function (contract PhotoNFT) view returns (struct PhotoNFTTradable.Trade memory)"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4310:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4289:40:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1270,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1264,
                            "src": "4347:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade memory"
                            }
                          },
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1006,
                          "src": "4347:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "4f70656e",
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4363:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          "value": "Open"
                        },
                        "src": "4347:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f74204f70656e2e",
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4371:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        },
                        "value": "Trade is not Open."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        }
                      ],
                      "id": 1269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4339:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "ExpressionStatement",
                  "src": "4339:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1278,
                        "name": "_photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "4417:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "id": 1279,
                        "name": "_photoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "4428:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1280,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "4438:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1277,
                      "name": "_updateSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1337,
                      "src": "4403:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_PhotoNFT_$110_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract PhotoNFT,uint256,address)"
                      }
                    },
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4403:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1282,
                  "nodeType": "ExpressionStatement",
                  "src": "4403:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1288,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4501:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4493:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1286,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4493:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4493:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1290,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "4508:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1291,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1264,
                          "src": "4516:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade memory"
                          }
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1002,
                        "src": "4516:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1283,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1259,
                        "src": "4471:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21538,
                      "src": "4471:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:59:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "4471:59:7"
                },
                {
                  "expression": {
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1295,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1264,
                        "src": "4540:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade memory"
                        }
                      },
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1006,
                      "src": "4540:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "43616e63656c6c6564",
                      "id": 1298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4555:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                        "typeString": "literal_string \"Cancelled\""
                      },
                      "value": "Cancelled"
                    },
                    "src": "4540:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "4540:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1304,
                            "name": "_photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "4607:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4599:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1302,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4599:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4599:18:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4619:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "id": 1301,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "4581:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4581:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1308,
                  "nodeType": "EmitStatement",
                  "src": "4576:55:7"
                }
              ]
            },
            "documentation": {
              "id": 1247,
              "nodeType": "StructuredDocumentation",
              "src": "3922:184:7",
              "text": " @dev Executes a trade. Must have approved this contract to transfer the amount of currency specified to the seller. Transfers ownership of the photoId to the filler."
            },
            "functionSelector": "493c2176",
            "id": 1310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipOfPhotoNFT",
            "nameLocation": "4120:27:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1250,
                  "mutability": "mutable",
                  "name": "_photoNFT",
                  "nameLocation": "4166:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "4157:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1249,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1248,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "4157:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "4157:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1252,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "4193:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "4185:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4185:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1254,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "4219:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "4211:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4211:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4147:84:7"
            },
            "returnParameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4239:0:7"
            },
            "scope": 1361,
            "src": "4111:527:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1336,
              "nodeType": "Block",
              "src": "4763:99:7",
              "statements": [
                {
                  "assignments": [
                    1322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1322,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "4787:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1336,
                      "src": "4773:19:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1321,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1320,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "4773:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "4773:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1329,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1323,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "4795:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1328,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1326,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1313,
                          "src": "4810:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4802:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1324,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4802:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4802:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4795:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4773:47:7"
                },
                {
                  "expression": {
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1330,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1322,
                        "src": "4830:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "4830:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1333,
                      "name": "_newSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1317,
                      "src": "4845:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4830:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1335,
                  "nodeType": "ExpressionStatement",
                  "src": "4830:25:7"
                }
              ]
            },
            "id": 1337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateSeller",
            "nameLocation": "4653:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1313,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "4685:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "4676:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1312,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1311,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "4676:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "4676:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "4711:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "4703:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4703:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "_newSeller",
                  "nameLocation": "4737:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "4729:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4729:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4666:87:7"
            },
            "returnParameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4763:0:7"
            },
            "scope": 1361,
            "src": "4644:218:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1359,
              "nodeType": "Block",
              "src": "5038:165:7",
              "statements": [
                {
                  "assignments": [
                    1349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1349,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "5061:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1359,
                      "src": "5048:18:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1348,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1347,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "5048:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "5048:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1356,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1350,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "5069:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1355,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1353,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "5084:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5076:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5076:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5076:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5069:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5048:46:7"
                },
                {
                  "expression": {
                    "id": 1357,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1349,
                    "src": "5111:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade memory"
                    }
                  },
                  "functionReturnParameters": 1346,
                  "id": 1358,
                  "nodeType": "Return",
                  "src": "5104:12:7"
                }
              ]
            },
            "documentation": {
              "id": 1338,
              "nodeType": "StructuredDocumentation",
              "src": "4868:58:7",
              "text": " @dev - Returns the details for a trade."
            },
            "functionSelector": "ab7a6c3e",
            "id": 1360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrade",
            "nameLocation": "4940:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "4958:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "4949:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1340,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1339,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "4949:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "4949:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4948:19:7"
            },
            "returnParameters": {
              "id": 1346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1345,
                  "mutability": "mutable",
                  "name": "trade_",
                  "nameLocation": "5026:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "5013:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                    "typeString": "struct PhotoNFTTradable.Trade"
                  },
                  "typeName": {
                    "id": 1344,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1343,
                      "name": "Trade",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1009,
                      "src": "5013:5:7"
                    },
                    "referencedDeclaration": 1009,
                    "src": "5013:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5012:21:7"
            },
            "scope": 1361,
            "src": "4931:272:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1362,
        "src": "294:4911:7"
      }
    ],
    "src": "32:5174:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/PhotoNFTTradable.sol",
    "exportedSymbols": {
      "PhotoNFT": [
        110
      ],
      "PhotoNFTData": [
        524
      ],
      "PhotoNFTTradable": [
        1361
      ]
    },
    "id": 1362,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 971,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "id": 972,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:7"
      },
      {
        "absolutePath": "project:/contracts/PhotoNFT.sol",
        "file": "./PhotoNFT.sol",
        "id": 974,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1362,
        "sourceUnit": 111,
        "src": "91:40:7",
        "symbolAliases": [
          {
            "foreign": {
              "id": 973,
              "name": "PhotoNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "99:8:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/PhotoNFTData.sol",
        "file": "./PhotoNFTData.sol",
        "id": 976,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1362,
        "sourceUnit": 525,
        "src": "132:48:7",
        "symbolAliases": [
          {
            "foreign": {
              "id": 975,
              "name": "PhotoNFTData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "140:12:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 977,
          "nodeType": "StructuredDocumentation",
          "src": "182:111:7",
          "text": " @title - PhotoNFTTradable contract\n @notice - This contract has role that put on sale of photoNFTs"
        },
        "fullyImplemented": true,
        "id": 1361,
        "linearizedBaseContracts": [
          1361
        ],
        "name": "PhotoNFTTradable",
        "nameLocation": "303:16:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 983,
            "name": "TradeStatusChange",
            "nameLocation": "332:17:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 979,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ad",
                  "nameLocation": "358:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "350:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 981,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "370:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "362:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 980,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "349:28:7"
            },
            "src": "326:52:7"
          },
          {
            "anonymous": false,
            "id": 989,
            "name": "TradePremiumStatusChange",
            "nameLocation": "389:24:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ad",
                  "nameLocation": "422:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "414:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "431:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 989,
                  "src": "426:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:25:7"
            },
            "src": "383:56:7"
          },
          {
            "anonymous": false,
            "id": 995,
            "name": "OpenTradeInfo",
            "nameLocation": "450:13:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 991,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "472:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "464:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 993,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "487:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "479:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:31:7"
            },
            "src": "444:51:7"
          },
          {
            "constant": false,
            "functionSelector": "ec039514",
            "id": 998,
            "mutability": "mutable",
            "name": "photoNFTData",
            "nameLocation": "564:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1361,
            "src": "544:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PhotoNFTData_$524",
              "typeString": "contract PhotoNFTData"
            },
            "typeName": {
              "id": 997,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 996,
                "name": "PhotoNFTData",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 524,
                "src": "544:12:7"
              },
              "referencedDeclaration": 524,
              "src": "544:12:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                "typeString": "contract PhotoNFTData"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PhotoNFTTradable.Trade",
            "id": 1009,
            "members": [
              {
                "constant": false,
                "id": 1000,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "614:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 1009,
                "src": "606:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 999,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "606:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1002,
                "mutability": "mutable",
                "name": "photoId",
                "nameLocation": "638:7:7",
                "nodeType": "VariableDeclaration",
                "scope": 1009,
                "src": "630:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1001,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "630:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1004,
                "mutability": "mutable",
                "name": "photoPrice",
                "nameLocation": "686:10:7",
                "nodeType": "VariableDeclaration",
                "scope": 1009,
                "src": "678:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1003,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "678:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1006,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "714:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 1009,
                "src": "706:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 1005,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "706:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1008,
                "mutability": "mutable",
                "name": "premiumStatus",
                "nameLocation": "764:13:7",
                "nodeType": "VariableDeclaration",
                "scope": 1009,
                "src": "759:18:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1007,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "759:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Trade",
            "nameLocation": "590:5:7",
            "nodeType": "StructDefinition",
            "scope": 1361,
            "src": "583:232:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a9f752e5",
            "id": 1014,
            "mutability": "mutable",
            "name": "trades",
            "nameLocation": "853:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 1361,
            "src": "820:39:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
              "typeString": "mapping(address => struct PhotoNFTTradable.Trade)"
            },
            "typeName": {
              "id": 1013,
              "keyType": {
                "id": 1010,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "828:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "820:25:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                "typeString": "mapping(address => struct PhotoNFTTradable.Trade)"
              },
              "valueType": {
                "id": 1012,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1011,
                  "name": "Trade",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1009,
                  "src": "839:5:7"
                },
                "referencedDeclaration": 1009,
                "src": "839:5:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                  "typeString": "struct PhotoNFTTradable.Trade"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1016,
            "mutability": "mutable",
            "name": "tradeCounter",
            "nameLocation": "904:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 1361,
            "src": "896:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1015,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "896:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "970:71:7",
              "statements": [
                {
                  "expression": {
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1022,
                      "name": "photoNFTData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "980:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                        "typeString": "contract PhotoNFTData"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1023,
                      "name": "_photoNFTData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "995:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                        "typeString": "contract PhotoNFTData"
                      }
                    },
                    "src": "980:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                      "typeString": "contract PhotoNFTData"
                    }
                  },
                  "id": 1025,
                  "nodeType": "ExpressionStatement",
                  "src": "980:28:7"
                },
                {
                  "expression": {
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1026,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "1018:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1018:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "1018:16:7"
                }
              ]
            },
            "id": 1031,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "mutability": "mutable",
                  "name": "_photoNFTData",
                  "nameLocation": "948:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "935:26:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                    "typeString": "contract PhotoNFTData"
                  },
                  "typeName": {
                    "id": 1018,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1017,
                      "name": "PhotoNFTData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 524,
                      "src": "935:12:7"
                    },
                    "referencedDeclaration": 524,
                    "src": "935:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                      "typeString": "contract PhotoNFTData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "934:28:7"
            },
            "returnParameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "970:0:7"
            },
            "scope": 1361,
            "src": "923:118:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1063,
              "nodeType": "Block",
              "src": "1501:569:7",
              "statements": [
                {
                  "expression": {
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1044,
                      "name": "tradeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "1583:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1599:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1583:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:17:7"
                },
                {
                  "documentation": "[Note]: New. Trade count is started from \"1\". This is to align photoId",
                  "expression": {
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1048,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "1742:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                          "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                        }
                      },
                      "id": 1053,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 1051,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1035,
                            "src": "1757:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1749:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1049,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1749:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1749:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1742:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_storage",
                        "typeString": "struct PhotoNFTTradable.Trade storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1055,
                          "name": "seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1041,
                          "src": "1798:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1056,
                          "name": "_photoId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1037,
                          "src": "1827:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1057,
                          "name": "_photoPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1039,
                          "src": "1861:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "43616e63656c6c6564",
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1894:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                            "typeString": "literal_string \"Cancelled\""
                          },
                          "value": "Cancelled"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1934:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                            "typeString": "literal_string \"Cancelled\""
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1054,
                        "name": "Trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "1770:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Trade_$1009_storage_ptr_$",
                          "typeString": "type(struct PhotoNFTTradable.Trade storage pointer)"
                        }
                      },
                      "id": 1060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "seller",
                        "photoId",
                        "photoPrice",
                        "status",
                        "premiumStatus"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1770:180:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade memory"
                      }
                    },
                    "src": "1742:208:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "id": 1062,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:208:7"
                }
              ]
            },
            "documentation": {
              "id": 1032,
              "nodeType": "StructuredDocumentation",
              "src": "1047:286:7",
              "text": " @notice - This method is only executed when a seller create a new PhotoNFT\n @dev Opens a new trade. Puts _photoId in escrow.\n @param _photoId The id for the photoId to trade.\n @param _photoPrice The amount of currency for which to trade the photoId."
            },
            "functionSelector": "dee98aad",
            "id": 1064,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerTradeWhenCreateNewPhotoNFT",
            "nameLocation": "1347:34:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "1400:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "1391:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1034,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1033,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "1391:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "1391:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "1426:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "1418:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1039,
                  "mutability": "mutable",
                  "name": "_photoPrice",
                  "nameLocation": "1452:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "1444:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1444:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1481:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "1473:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1381:112:7"
            },
            "returnParameters": {
              "id": 1043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1501:0:7"
            },
            "scope": 1361,
            "src": "1338:732:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1129,
              "nodeType": "Block",
              "src": "2241:520:7",
              "statements": [
                {
                  "assignments": [
                    1077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1077,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "2265:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1129,
                      "src": "2251:19:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1076,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1075,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "2251:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "2251:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1084,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1078,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "2273:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1083,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1081,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1068,
                          "src": "2288:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2280:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2280:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2280:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2273:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2251:47:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1086,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2329:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2329:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1088,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "2343:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1000,
                          "src": "2343:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2329:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206265206f70656e206f6e6c792062792073656c6c65722e",
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2369:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        },
                        "value": "Trade can be open only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        }
                      ],
                      "id": 1085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2308:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:106:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1093,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:106:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1097,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "2508:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "hexValue": "4f70656e",
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2518:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        "value": "Open"
                      },
                      {
                        "id": 1099,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "2526:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1094,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "2482:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 269,
                      "src": "2482:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$110_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,string memory,uint256) external returns (bool)"
                      }
                    },
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2482:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "2482:50:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1105,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2564:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2564:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1109,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2584:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2576:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1107,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2576:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2576:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1111,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1077,
                          "src": "2591:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1002,
                        "src": "2591:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1102,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "2542:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21538,
                      "src": "2542:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2542:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1114,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:63:7"
                },
                {
                  "expression": {
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1115,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1077,
                        "src": "2674:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1117,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1006,
                      "src": "2674:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "4f70656e",
                      "id": 1118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2689:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                        "typeString": "literal_string \"Open\""
                      },
                      "value": "Open"
                    },
                    "src": "2674:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1120,
                  "nodeType": "ExpressionStatement",
                  "src": "2674:21:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1124,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1068,
                            "src": "2736:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2728:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2728:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2728:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4f70656e",
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2747:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        },
                        "value": "Open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                          "typeString": "literal_string \"Open\""
                        }
                      ],
                      "id": 1121,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "2710:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2710:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1128,
                  "nodeType": "EmitStatement",
                  "src": "2705:49:7"
                }
              ]
            },
            "documentation": {
              "id": 1065,
              "nodeType": "StructuredDocumentation",
              "src": "2076:52:7",
              "text": " @dev Opens a trade by the seller."
            },
            "functionSelector": "baea40e2",
            "id": 1130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openTrade",
            "nameLocation": "2142:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "2170:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "2161:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1067,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1066,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "2161:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "2161:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "2196:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "2188:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2222:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "2214:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2214:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2151:82:7"
            },
            "returnParameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2241:0:7"
            },
            "scope": 1361,
            "src": "2133:628:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1193,
              "nodeType": "Block",
              "src": "2891:489:7",
              "statements": [
                {
                  "assignments": [
                    1141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1141,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "2915:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1193,
                      "src": "2901:19:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1140,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1139,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "2901:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "2901:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1148,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1142,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "2923:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1147,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1145,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1134,
                          "src": "2938:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2930:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2930:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2930:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2923:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2901:47:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2980:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2980:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1152,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "2994:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1000,
                          "src": "2994:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2980:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e2062652063616e63656c6c6564206f6e6c792062792073656c6c65722e",
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3020:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
                          "typeString": "literal_string \"Trade can be cancelled only by seller.\""
                        },
                        "value": "Trade can be cancelled only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0744e3e8de6583d086339a67b8ab70fd095f3c7b732b6676ce3729ae175dc11f",
                          "typeString": "literal_string \"Trade can be cancelled only by seller.\""
                        }
                      ],
                      "id": 1149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2959:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2959:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1157,
                  "nodeType": "ExpressionStatement",
                  "src": "2959:111:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1161,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "3173:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3183:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      },
                      {
                        "hexValue": "30",
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3196:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 1158,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "3147:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 269,
                      "src": "3147:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$110_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,string memory,uint256) external returns (bool)"
                      }
                    },
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3147:51:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1165,
                  "nodeType": "ExpressionStatement",
                  "src": "3147:51:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1171,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3238:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3230:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1169,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3230:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3230:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1173,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "3245:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1174,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1000,
                        "src": "3245:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1175,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "3259:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                          }
                        },
                        "id": 1176,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1002,
                        "src": "3259:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1166,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "3208:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21538,
                      "src": "3208:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3208:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1178,
                  "nodeType": "ExpressionStatement",
                  "src": "3208:65:7"
                },
                {
                  "expression": {
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1179,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "3283:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1181,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1006,
                      "src": "3283:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "43616e63656c6c6564",
                      "id": 1182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3298:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                        "typeString": "literal_string \"Cancelled\""
                      },
                      "value": "Cancelled"
                    },
                    "src": "3283:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "3283:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1188,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "3350:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3342:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1186,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3342:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3342:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3361:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "id": 1185,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "3324:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3324:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "EmitStatement",
                  "src": "3319:54:7"
                }
              ]
            },
            "documentation": {
              "id": 1131,
              "nodeType": "StructuredDocumentation",
              "src": "2767:54:7",
              "text": " @dev Cancels a trade by the seller."
            },
            "functionSelector": "759c4bf3",
            "id": 1194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelTrade",
            "nameLocation": "2835:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "2856:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "2847:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1133,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1132,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "2847:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "2847:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "2874:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "2866:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2846:37:7"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2891:0:7"
            },
            "scope": 1361,
            "src": "2826:554:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1245,
              "nodeType": "Block",
              "src": "3562:354:7",
              "statements": [
                {
                  "assignments": [
                    1207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1207,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "3586:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "3572:19:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1206,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1205,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "3572:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "3572:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1214,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1208,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "3594:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1213,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1211,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1198,
                          "src": "3609:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3601:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1209,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3601:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3601:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3594:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3572:47:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1216,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3650:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3650:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1218,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1207,
                            "src": "3664:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                            }
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1000,
                          "src": "3664:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3650:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54726164652063616e206265206f70656e206f6e6c792062792073656c6c65722e",
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3690:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        },
                        "value": "Trade can be open only by seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_268e48c2205378f3b7ae3c6b6b6d9ec43fe563160d624a82a00d8fddeef26408",
                          "typeString": "literal_string \"Trade can be open only by seller.\""
                        }
                      ],
                      "id": 1215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3629:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3629:106:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1223,
                  "nodeType": "ExpressionStatement",
                  "src": "3629:106:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1227,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "3778:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "id": 1228,
                        "name": "_newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "3788:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 1224,
                        "name": "photoNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "3745:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFTData_$524",
                          "typeString": "contract PhotoNFTData"
                        }
                      },
                      "id": 1226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updatePremiumStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 315,
                      "src": "3745:32:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_PhotoNFT_$110_$_t_bool_$returns$_t_bool_$",
                        "typeString": "function (contract PhotoNFT,bool) external returns (bool)"
                      }
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3745:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "3745:53:7"
                },
                {
                  "expression": {
                    "id": 1235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1231,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "3809:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1233,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "premiumStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1008,
                      "src": "3809:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1234,
                      "name": "_newState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1202,
                      "src": "3831:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3809:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1236,
                  "nodeType": "ExpressionStatement",
                  "src": "3809:31:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1240,
                            "name": "photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1198,
                            "src": "3888:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3880:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1238,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3880:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3880:17:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1242,
                        "name": "_newState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1202,
                        "src": "3899:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1237,
                      "name": "TradePremiumStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "3855:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3855:54:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1244,
                  "nodeType": "EmitStatement",
                  "src": "3850:59:7"
                }
              ]
            },
            "documentation": {
              "id": 1195,
              "nodeType": "StructuredDocumentation",
              "src": "3386:52:7",
              "text": " @dev Opens a trade by the seller."
            },
            "functionSelector": "8d6b52f3",
            "id": 1246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePremiumStatus",
            "nameLocation": "3452:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1198,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "3490:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3481:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1197,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1196,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "3481:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "3481:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1200,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "3516:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3508:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3508:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "_newState",
                  "nameLocation": "3539:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1246,
                  "src": "3534:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3534:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3471:83:7"
            },
            "returnParameters": {
              "id": 1204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3562:0:7"
            },
            "scope": 1361,
            "src": "3443:473:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1309,
              "nodeType": "Block",
              "src": "4239:399:7",
              "statements": [
                {
                  "assignments": [
                    1259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1259,
                      "mutability": "mutable",
                      "name": "photoNFT",
                      "nameLocation": "4258:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1309,
                      "src": "4249:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhotoNFT_$110",
                        "typeString": "contract PhotoNFT"
                      },
                      "typeName": {
                        "id": 1258,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1257,
                          "name": "PhotoNFT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 110,
                          "src": "4249:8:7"
                        },
                        "referencedDeclaration": 110,
                        "src": "4249:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1261,
                  "initialValue": {
                    "id": 1260,
                    "name": "_photoNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1250,
                    "src": "4269:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4249:29:7"
                },
                {
                  "assignments": [
                    1264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1264,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "4302:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1309,
                      "src": "4289:18:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1263,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1262,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "4289:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "4289:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1268,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1266,
                        "name": "_photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "4319:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      ],
                      "id": 1265,
                      "name": "getTrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1360,
                      "src": "4310:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_PhotoNFT_$110_$returns$_t_struct$_Trade_$1009_memory_ptr_$",
                        "typeString": "function (contract PhotoNFT) view returns (struct PhotoNFTTradable.Trade memory)"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4310:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4289:40:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1270,
                            "name": "trade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1264,
                            "src": "4347:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                              "typeString": "struct PhotoNFTTradable.Trade memory"
                            }
                          },
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1006,
                          "src": "4347:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "4f70656e",
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4363:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                            "typeString": "literal_string \"Open\""
                          },
                          "value": "Open"
                        },
                        "src": "4347:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616465206973206e6f74204f70656e2e",
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4371:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        },
                        "value": "Trade is not Open."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                          "typeString": "literal_string \"Trade is not Open.\""
                        }
                      ],
                      "id": 1269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4339:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "ExpressionStatement",
                  "src": "4339:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1278,
                        "name": "_photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "4417:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      {
                        "id": 1279,
                        "name": "_photoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "4428:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1280,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "4438:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1277,
                      "name": "_updateSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1337,
                      "src": "4403:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_PhotoNFT_$110_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract PhotoNFT,uint256,address)"
                      }
                    },
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4403:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1282,
                  "nodeType": "ExpressionStatement",
                  "src": "4403:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1288,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4501:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFTTradable_$1361",
                              "typeString": "contract PhotoNFTTradable"
                            }
                          ],
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4493:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1286,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4493:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4493:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1290,
                        "name": "_buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "4508:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1291,
                          "name": "trade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1264,
                          "src": "4516:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                            "typeString": "struct PhotoNFTTradable.Trade memory"
                          }
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "photoId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1002,
                        "src": "4516:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1283,
                        "name": "photoNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1259,
                        "src": "4471:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhotoNFT_$110",
                          "typeString": "contract PhotoNFT"
                        }
                      },
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21538,
                      "src": "4471:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:59:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "4471:59:7"
                },
                {
                  "expression": {
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1295,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1264,
                        "src": "4540:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade memory"
                        }
                      },
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1006,
                      "src": "4540:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "43616e63656c6c6564",
                      "id": 1298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4555:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                        "typeString": "literal_string \"Cancelled\""
                      },
                      "value": "Cancelled"
                    },
                    "src": "4540:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "4540:26:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1304,
                            "name": "_photoNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "4607:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PhotoNFT_$110",
                              "typeString": "contract PhotoNFT"
                            }
                          ],
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4599:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1302,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4599:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4599:18:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "43616e63656c6c6564",
                        "id": 1306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4619:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        },
                        "value": "Cancelled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                          "typeString": "literal_string \"Cancelled\""
                        }
                      ],
                      "id": 1301,
                      "name": "TradeStatusChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 983,
                      "src": "4581:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32)"
                      }
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4581:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1308,
                  "nodeType": "EmitStatement",
                  "src": "4576:55:7"
                }
              ]
            },
            "documentation": {
              "id": 1247,
              "nodeType": "StructuredDocumentation",
              "src": "3922:184:7",
              "text": " @dev Executes a trade. Must have approved this contract to transfer the amount of currency specified to the seller. Transfers ownership of the photoId to the filler."
            },
            "functionSelector": "493c2176",
            "id": 1310,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnershipOfPhotoNFT",
            "nameLocation": "4120:27:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1250,
                  "mutability": "mutable",
                  "name": "_photoNFT",
                  "nameLocation": "4166:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "4157:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1249,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1248,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "4157:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "4157:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1252,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "4193:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "4185:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4185:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1254,
                  "mutability": "mutable",
                  "name": "_buyer",
                  "nameLocation": "4219:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "4211:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4211:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4147:84:7"
            },
            "returnParameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4239:0:7"
            },
            "scope": 1361,
            "src": "4111:527:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1336,
              "nodeType": "Block",
              "src": "4763:99:7",
              "statements": [
                {
                  "assignments": [
                    1322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1322,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "4787:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1336,
                      "src": "4773:19:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1321,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1320,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "4773:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "4773:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1329,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1323,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "4795:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1328,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1326,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1313,
                          "src": "4810:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4802:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1324,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4802:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4802:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4795:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4773:47:7"
                },
                {
                  "expression": {
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1330,
                        "name": "trade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1322,
                        "src": "4830:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade storage pointer"
                        }
                      },
                      "id": 1332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "4830:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1333,
                      "name": "_newSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1317,
                      "src": "4845:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4830:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1335,
                  "nodeType": "ExpressionStatement",
                  "src": "4830:25:7"
                }
              ]
            },
            "id": 1337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateSeller",
            "nameLocation": "4653:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1313,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "4685:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "4676:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1312,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1311,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "4676:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "4676:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "_photoId",
                  "nameLocation": "4711:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "4703:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4703:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "_newSeller",
                  "nameLocation": "4737:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1337,
                  "src": "4729:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4729:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4666:87:7"
            },
            "returnParameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4763:0:7"
            },
            "scope": 1361,
            "src": "4644:218:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1359,
              "nodeType": "Block",
              "src": "5038:165:7",
              "statements": [
                {
                  "assignments": [
                    1349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1349,
                      "mutability": "mutable",
                      "name": "trade",
                      "nameLocation": "5061:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1359,
                      "src": "5048:18:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                        "typeString": "struct PhotoNFTTradable.Trade"
                      },
                      "typeName": {
                        "id": 1348,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1347,
                          "name": "Trade",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1009,
                          "src": "5048:5:7"
                        },
                        "referencedDeclaration": 1009,
                        "src": "5048:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                          "typeString": "struct PhotoNFTTradable.Trade"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1356,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1350,
                      "name": "trades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "5069:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Trade_$1009_storage_$",
                        "typeString": "mapping(address => struct PhotoNFTTradable.Trade storage ref)"
                      }
                    },
                    "id": 1355,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 1353,
                          "name": "photoNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1341,
                          "src": "5084:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_PhotoNFT_$110",
                            "typeString": "contract PhotoNFT"
                          }
                        ],
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5076:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5076:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5076:17:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5069:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage",
                      "typeString": "struct PhotoNFTTradable.Trade storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5048:46:7"
                },
                {
                  "expression": {
                    "id": 1357,
                    "name": "trade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1349,
                    "src": "5111:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade memory"
                    }
                  },
                  "functionReturnParameters": 1346,
                  "id": 1358,
                  "nodeType": "Return",
                  "src": "5104:12:7"
                }
              ]
            },
            "documentation": {
              "id": 1338,
              "nodeType": "StructuredDocumentation",
              "src": "4868:58:7",
              "text": " @dev - Returns the details for a trade."
            },
            "functionSelector": "ab7a6c3e",
            "id": 1360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTrade",
            "nameLocation": "4940:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "mutability": "mutable",
                  "name": "photoNFT",
                  "nameLocation": "4958:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "4949:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PhotoNFT_$110",
                    "typeString": "contract PhotoNFT"
                  },
                  "typeName": {
                    "id": 1340,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1339,
                      "name": "PhotoNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 110,
                      "src": "4949:8:7"
                    },
                    "referencedDeclaration": 110,
                    "src": "4949:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhotoNFT_$110",
                      "typeString": "contract PhotoNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4948:19:7"
            },
            "returnParameters": {
              "id": 1346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1345,
                  "mutability": "mutable",
                  "name": "trade_",
                  "nameLocation": "5026:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "5013:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Trade_$1009_memory_ptr",
                    "typeString": "struct PhotoNFTTradable.Trade"
                  },
                  "typeName": {
                    "id": 1344,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1343,
                      "name": "Trade",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1009,
                      "src": "5013:5:7"
                    },
                    "referencedDeclaration": 1009,
                    "src": "5013:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Trade_$1009_storage_ptr",
                      "typeString": "struct PhotoNFTTradable.Trade"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5012:21:7"
            },
            "scope": 1361,
            "src": "4931:272:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1362,
        "src": "294:4911:7"
      }
    ],
    "src": "32:5174:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xD7D594c9d025AFF0501e358a0FA80a85a9E131a5",
      "transactionHash": "0xcbbd7e54338d74281d681a03403f828af5a87594f11cd3477662bbe0bf78c2c6"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-01T11:28:49.864Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "cancelTrade(address,uint256)": {
        "details": "Cancels a trade by the seller."
      },
      "getTrade(address)": {
        "details": "- Returns the details for a trade."
      },
      "openTrade(address,uint256,uint256)": {
        "details": "Opens a trade by the seller."
      },
      "registerTradeWhenCreateNewPhotoNFT(address,uint256,uint256,address)": {
        "details": "Opens a new trade. Puts _photoId in escrow.",
        "params": {
          "_photoId": "The id for the photoId to trade.",
          "_photoPrice": "The amount of currency for which to trade the photoId."
        }
      },
      "transferOwnershipOfPhotoNFT(address,uint256,address)": {
        "details": "Executes a trade. Must have approved this contract to transfer the amount of currency specified to the seller. Transfers ownership of the photoId to the filler."
      },
      "updatePremiumStatus(address,uint256,bool)": {
        "details": "Opens a trade by the seller."
      }
    },
    "title": "- PhotoNFTTradable contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "registerTradeWhenCreateNewPhotoNFT(address,uint256,uint256,address)": {
        "notice": "- This method is only executed when a seller create a new PhotoNFT"
      }
    },
    "notice": "- This contract has role that put on sale of photoNFTs",
    "version": 1
  }
}