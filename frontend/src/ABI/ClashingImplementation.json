{
  "contractName": "ClashingImplementation",
  "abi": [
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegatedFunction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegatedFunction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation contract with an admin() function made to clash withTransparentUpgradeableProxy's to test correct functioning of theTransparent Proxy feature.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/openzeppelin-solidity/contracts/mocks/ClashingImplementation.sol\":\"ClashingImplementation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/openzeppelin-solidity/contracts/mocks/ClashingImplementation.sol\":{\"keccak256\":\"0xadc3c14e5d0e2d7ad89904a4b5c705ae4fa7049361463f6a37c7413005a00c12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4522c70ac05bf7b557bb3b784acd5bdd41fd08f53dd6154b950e224a0c570ad\",\"dweb:/ipfs/QmY54YFefjQPBoYxQWGyJzDdEWHD4BcpcU3Mi161ANNibi\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610154806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063abf8e0e71461003b578063f851a44014610059575b600080fd5b610043610077565b60405161005091906100c5565b60405180910390f35b610061610080565b60405161006e91906100aa565b60405180910390f35b60006001905090565b60006311111142905090565b610095816100e0565b82525050565b6100a4816100f2565b82525050565b60006020820190506100bf600083018461008c565b92915050565b60006020820190506100da600083018461009b565b92915050565b60006100eb826100fe565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea26469706673582212204085216c07bac0bab1e0d4df47e828d3e1d2927e72eb3affc45234adcfd7246564736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063abf8e0e71461003b578063f851a44014610059575b600080fd5b610043610077565b60405161005091906100c5565b60405180910390f35b610061610080565b60405161006e91906100aa565b60405180910390f35b60006001905090565b60006311111142905090565b610095816100e0565b82525050565b6100a4816100f2565b82525050565b60006020820190506100bf600083018461008c565b92915050565b60006020820190506100da600083018461009b565b92915050565b60006100eb826100fe565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea26469706673582212204085216c07bac0bab1e0d4df47e828d3e1d2927e72eb3affc45234adcfd7246564736f6c63430008020033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1017:242",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:242"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:242",
                "type": ""
              }
            ],
            "src": "7:118:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "190:50:242",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "207:3:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "212:14:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "212:21:242"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "200:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "200:34:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "200:34:242"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "178:5:242",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "185:3:242",
                "type": ""
              }
            ],
            "src": "131:109:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "344:124:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "354:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "366:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "377:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "362:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "362:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "354:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "434:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "447:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "458:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "443:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "443:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "390:43:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:71:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:71:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "316:9:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "328:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "339:4:242",
                "type": ""
              }
            ],
            "src": "246:222:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "566:118:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "576:26:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "588:9:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "599:2:242",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "584:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "584:18:242"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "576:4:242"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "650:6:242"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "663:9:242"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "674:1:242",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "659:3:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "659:17:242"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "612:37:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "612:65:242"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "612:65:242"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "538:9:242",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "550:6:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "561:4:242",
                "type": ""
              }
            ],
            "src": "474:210:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:51:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "745:35:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "774:5:242"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "756:17:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "756:24:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "745:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "717:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "727:7:242",
                "type": ""
              }
            ],
            "src": "690:96:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "834:48:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "844:32:242",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "869:5:242"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "862:6:242"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "862:13:242"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "855:6:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "855:21:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "844:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "816:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "826:7:242",
                "type": ""
              }
            ],
            "src": "792:90:242"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "933:81:242",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "943:65:242",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "958:5:242"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "965:42:242",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "954:3:242"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:54:242"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "943:7:242"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "915:5:242",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "925:7:242",
                "type": ""
              }
            ],
            "src": "888:126:242"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n}\n",
      "id": 242,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "250:247:73:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "250:247:73:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;409:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;409:86;461:4;484;477:11;;409:86;:::o;288:115::-;328:7;354:42;347:49;;288:115;:::o;7:118:242:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:109::-;212:21;227:5;212:21;:::i;:::-;207:3;200:34;190:50;;:::o;246:222::-;;377:2;366:9;362:18;354:26;;390:71;458:1;447:9;443:17;434:6;390:71;:::i;:::-;344:124;;;;:::o;474:210::-;;599:2;588:9;584:18;576:26;;612:65;674:1;663:9;659:17;650:6;612:65;:::i;:::-;566:118;;;;:::o;690:96::-;;756:24;774:5;756:24;:::i;:::-;745:35;;735:51;;;:::o;792:90::-;;869:5;862:13;855:21;844:32;;834:48;;;:::o;888:126::-;;965:42;958:5;954:54;943:65;;933:81;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Implementation contract with an admin() function made to clash with\n * @dev TransparentUpgradeableProxy's to test correct functioning of the\n * @dev Transparent Proxy feature.\n */\ncontract ClashingImplementation {\n    function admin() external pure returns (address) {\n        return 0x0000000000000000000000000000000011111142;\n    }\n\n    function delegatedFunction() external pure returns (bool) {\n        return true;\n    }\n}\n",
  "sourcePath": "D:\\marketplace\\frontend (2)\\contracts\\openzeppelin-solidity\\contracts\\mocks\\ClashingImplementation.sol",
  "ast": {
    "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/mocks/ClashingImplementation.sol",
    "exportedSymbols": {
      "ClashingImplementation": [
        7871
      ]
    },
    "id": 7872,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7853,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:73"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7854,
          "nodeType": "StructuredDocumentation",
          "src": "58:191:73",
          "text": " @dev Implementation contract with an admin() function made to clash with\n @dev TransparentUpgradeableProxy's to test correct functioning of the\n @dev Transparent Proxy feature."
        },
        "fullyImplemented": true,
        "id": 7871,
        "linearizedBaseContracts": [
          7871
        ],
        "name": "ClashingImplementation",
        "nameLocation": "259:22:73",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7861,
              "nodeType": "Block",
              "src": "337:66:73",
              "statements": [
                {
                  "expression": {
                    "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303131313131313432",
                    "id": 7859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "354:42:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x0000000000000000000000000000000011111142"
                  },
                  "functionReturnParameters": 7858,
                  "id": 7860,
                  "nodeType": "Return",
                  "src": "347:49:73"
                }
              ]
            },
            "functionSelector": "f851a440",
            "id": 7862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "admin",
            "nameLocation": "297:5:73",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "302:2:73"
            },
            "returnParameters": {
              "id": 7858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7857,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "328:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "327:9:73"
            },
            "scope": 7871,
            "src": "288:115:73",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7869,
              "nodeType": "Block",
              "src": "467:28:73",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "484:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7866,
                  "id": 7868,
                  "nodeType": "Return",
                  "src": "477:11:73"
                }
              ]
            },
            "functionSelector": "abf8e0e7",
            "id": 7870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegatedFunction",
            "nameLocation": "418:17:73",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:2:73"
            },
            "returnParameters": {
              "id": 7866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7870,
                  "src": "461:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7864,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "460:6:73"
            },
            "scope": 7871,
            "src": "409:86:73",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7872,
        "src": "250:247:73"
      }
    ],
    "src": "33:465:73"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/mocks/ClashingImplementation.sol",
    "exportedSymbols": {
      "ClashingImplementation": [
        7871
      ]
    },
    "id": 7872,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7853,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:73"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7854,
          "nodeType": "StructuredDocumentation",
          "src": "58:191:73",
          "text": " @dev Implementation contract with an admin() function made to clash with\n @dev TransparentUpgradeableProxy's to test correct functioning of the\n @dev Transparent Proxy feature."
        },
        "fullyImplemented": true,
        "id": 7871,
        "linearizedBaseContracts": [
          7871
        ],
        "name": "ClashingImplementation",
        "nameLocation": "259:22:73",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7861,
              "nodeType": "Block",
              "src": "337:66:73",
              "statements": [
                {
                  "expression": {
                    "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303131313131313432",
                    "id": 7859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "354:42:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x0000000000000000000000000000000011111142"
                  },
                  "functionReturnParameters": 7858,
                  "id": 7860,
                  "nodeType": "Return",
                  "src": "347:49:73"
                }
              ]
            },
            "functionSelector": "f851a440",
            "id": 7862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "admin",
            "nameLocation": "297:5:73",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "302:2:73"
            },
            "returnParameters": {
              "id": 7858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7857,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7862,
                  "src": "328:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "328:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "327:9:73"
            },
            "scope": 7871,
            "src": "288:115:73",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7869,
              "nodeType": "Block",
              "src": "467:28:73",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 7867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "484:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 7866,
                  "id": 7868,
                  "nodeType": "Return",
                  "src": "477:11:73"
                }
              ]
            },
            "functionSelector": "abf8e0e7",
            "id": 7870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegatedFunction",
            "nameLocation": "418:17:73",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:2:73"
            },
            "returnParameters": {
              "id": 7866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7870,
                  "src": "461:4:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7864,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:4:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "460:6:73"
            },
            "scope": 7871,
            "src": "409:86:73",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7872,
        "src": "250:247:73"
      }
    ],
    "src": "33:465:73"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-01T11:28:50.720Z",
  "devdoc": {
    "details": "Implementation contract with an admin() function made to clash withTransparentUpgradeableProxy's to test correct functioning of theTransparent Proxy feature.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}